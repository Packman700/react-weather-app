{"version":3,"sources":["reportWebVitals.js","helpers/sleep.js","styled-components/buttons/BUTTON_TEMPLATE.js","styled-components/buttons/SearchBlueButton.js","styled-components/input/InputText.js","styled-components/position/FlexRowCenter.js","styled-components/position/FlexColumnCenter.js","styled-components/small/Small.js","styled-components/position/FreeSpace.js","styled-components/ul/Ul.js","styled-components/li/CityListItem.js","styled-components/buttons/CloseButton.js","styled-components/StyledSelectPlace.js","components/SelectPlace.js","styled-components/p/DarkGrayText.js","styled-components/h1/TodayTemperatureH1.js","styled-components/sub/TodayTemperatureSub.js","styled-components/p/WeatherName.js","components/TodayWeather.js","styled-components/div/CARD_TEMPLATE.js","styled-components/div/StyledWeatherForecastCard.js","styled-components/p/ThinWhite.js","styled-components/p/ThinLightGray.js","styled-components/img/Img.js","styled-components/grid/WeatherForecastCardsGrid.js","components/WeatherForecastCards.js","styled-components/buttons/TemperatureScaleButton.js","components/SwitchTemperatureScale.js","styled-components/div/StyledHighlightCard.js","styled-components/grid/HighlightsGrid.js","styled-components/header/HighlightHeader.js","styled-components/p/BigBold.js","styled-components/sub/HighlightSub.js","styled-components/icon/WindDirectionIcon.js","styled-components/small/ProgressBarSmall.js","styled-components/meter/HumidityMeter.js","styled-components/h2/H2.js","components/TodayHighlights.js","styled-components/StyledLoadingWeatherData.js","styled-components/icon/LoadIcon.js","components/LoadingWeatherData.js","helpers/stringToBool.js","helpers/getLatLong.js","utils/colors.js","utils/theme.js","utils/widths.js","utils/breakPoints.js","layout/Layout.js","styled-components/StyledAside.js","styled-components/StyledMain.js","styled-components/buttons/SearchGreyButton.js","styled-components/buttons/LocationButton.js","styled-components/icon/CloudIcon.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sleep","ms","Promise","resolve","setTimeout","BUTTON_TEMPLATE","styled","button","theme","colors","white","SearchBlueButton","asideBtnBackgroundAlt","InputTextDiv","div","searchIcon","grayMuted","css","FormatInputText","props","children","FlexRowCenter","justifyContent","width","mb","mt","FlexColumnCenter","pl","pr","y","fadeIn","keyframes","fadeEffects","fade","fastFade","Small","small","hide","FreeSpace","mr","Ul","ul","slideInFromLeft","CityListItem","li","index","grayDark","CloseButton","revealTheCard","hideTheCard","StyledSelectPlace","primaryLight","widths","asideWidth","breakPoints","verticalRotation","SelectPlace","state","startSearch","numberCitiesToShow","generatePlacesList","data","apiCitiesData","weatherQuery","getDataFromApi","handleChange","undefined","slice","selectCityAction","event","a","target","className","setState","name","value","console","log","map","city","data-key","woeid","onClick","title","this","inputValue","cityNameQuery","isRunningApiCitiesRequest","isSelectPlaceActive","citesListElements","notShownCitiesElements","length","searchButtonAction","type","placeholder","autoComplete","onChange","onKeyUp","keyCode","aria-hidden","React","Component","DarkGrayText","p","fontWeight","locationIcon","TodayTemperatureH1","h1","TodayTemperatureSub","sub","grayLight","WeatherName","TodayWeather","consolidated_weather","weatherImage","weather_state_abbr","weatherName","weather_state_name","temperature","the_temp","date","applicable_date","location","convertTemperature","formattedTemperature","scaleMark","as","src","alt","height","datatime","dateFormat","CARD_TEMPLATE","StyledWeatherForecastCard","ThinWhite","ThinLightGray","Img","img","WeatherForecastCardsGrid","section","smallScreen","weatherCardsTwoRows","WeatherForecastCards","weatherCards","cardInfo","minTemperature","min_temp","maxTemperature","max_temp","id","formattedMaxTemperature","formattedMinTemperature","TemperatureScaleButton","StyledButtonTemplate","active","primaryDark","SwitchTemperatureScale","selectedTemperatureScale","StyledHighlightCard","ml","HighlightsGrid","HighlightHeader","header","BigBold","WordSpacing","HighlightSub","WindDirectionIcon","rotateDeg","ProgressBarSmall","align","x","HumidityMeter","meter","complementary","H2","h2","TodayHighlights","windDirection","wind_direction_compass","compassRotate","wind_direction","windSpeed","wind_speed","airPressure","air_pressure","humidity","visibility","Math","round","toString","replace","min","max","low","high","StyledLoadingWeatherData","rotate","LoadIcon","LoadingWeatherData","href","stringToBool","string","getPosition","res","rej","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","getLatLong","unselectedMainBtnBackground","unselectedMainBtnText","selectedMainBtnBackground","selectedMainBtnText","asideBtnBackground","GlobalStyle","createGlobalStyle","StyleWrapper","Layout","StyledAside","StyledMain","main","SearchGrayButton","LocationButton","CloudIcon","top","left1","size","left2","right2","App","apiAddress","PREFIX","apiWeatherData","isRunningApiWeatherRequest","searchCity","temperatureScale","centigradeTemperature","Error","parseFloat","bind","currentLocationQueryProcedure","getWeoidFromCurrentLocation","queryFunction","response","storeLocalization","status","ok","json","apiData","statusText","error","fetch","trim","apiResponse","key","dataset","fakeEvent","apiLatLongResponse","nearestCity","selectLocalizationPack","SearchGreyButton","style","alignSelf","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a7041e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry)\r\n                getFID(onPerfEntry)\r\n                getFCP(onPerfEntry)\r\n                getLCP(onPerfEntry)\r\n                getTTFB(onPerfEntry)\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport default sleep\n","import styled from 'styled-components'\r\n\r\nconst BUTTON_TEMPLATE = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    border: transparent 0 solid;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    background: transparent;\r\n`\r\n\r\nexport default BUTTON_TEMPLATE\r\n","import styled from 'styled-components'\r\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\r\n\r\nconst SearchBlueButton = styled(BUTTON_TEMPLATE)`\r\n    // Default button\r\n    height: 48px;\r\n    padding: 0 1.2em 0;\r\n    background: ${({ theme }) => theme.colors.asideBtnBackgroundAlt};\r\n`\r\n\r\nexport default SearchBlueButton\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst InputTextDiv = styled.div`\r\n    position: relative;\r\n    display: inline-block;\r\n    padding: 12px 20px;\r\n\r\n    height: 48px;\r\n    width: 268px;\r\n\r\n    border: ${({ theme }) => theme.colors.white} 1px solid;\r\n\r\n    font-size: 1rem;\r\n    // Edit inner input\r\n    & input {\r\n        background: transparent;\r\n        border: transparent 0 solid;\r\n        width: ${({ searchIcon }) => (searchIcon ? '208px' : '228px')};\r\n        color: ${({ theme }) => theme.colors.grayMuted};\r\n        font-size: 1em;\r\n        font-weight: 500;\r\n        margin-left: ${({ searchIcon }) =>\r\n            searchIcon ? '20px' : 0}; // make space for icon\r\n        :focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    // Add search icon\r\n    ${({ searchIcon }) =>\r\n        searchIcon &&\r\n        css`\r\n            ::before {\r\n                position: absolute;\r\n                font-family: 'Material Icons', 'Raleway', sans-serif;\r\n                content: 'search';\r\n                font-size: 23px;\r\n                color: ${({ theme }) => theme.colors.grayMuted};\r\n                left: 10px;\r\n                top: 11px;\r\n            }\r\n        `}\r\n`\r\n\r\nconst FormatInputText = props => (\r\n    <InputTextDiv {...props}>{props.children}</InputTextDiv>\r\n)\r\n\r\n/// USE EXAMPLE ///\r\n// <FormatInputText searchIcon>\r\n//     <input type=\"text\" placeholder=\"search location\" />\r\n// </FormatInputText>\r\n\r\nexport default FormatInputText\r\n","import styled from 'styled-components'\r\n\r\nconst FlexRowCenter = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    justify-content: ${({ justifyContent }) =>\r\n        justifyContent ? justifyContent : 'space-between'};\r\n    width: ${({ width }) => (width ? width : '100%')};\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n`\r\n\r\nexport default FlexRowCenter\r\n","import styled from 'styled-components'\r\n\r\nconst FlexColumnCenter = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    width: ${({ width }) => (width ? width : 'auto')};\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n    padding-left: ${({ pl }) => (pl ? pl : 0)};\r\n    padding-right: ${({ pr }) => (pr ? pr : 0)};\r\n    transform: translateY(${({ y }) => y && y});\r\n`\r\n\r\nexport default FlexColumnCenter\r\n","import styled, { css, keyframes } from 'styled-components'\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`\n\nconst fadeEffects = css`\n    ${({ fade }) =>\n        fade &&\n        css`\n            opacity: 0;\n            animation: ${fadeIn} 1000ms ease-in 500ms forwards;\n        `}\n\n    ${({ fastFade }) =>\n        fastFade &&\n        css`\n            opacity: 0;\n            animation: ${fadeIn} 600ms ease-in 0ms forwards;\n        `}\n`\n\nconst Small = styled.small`\n    display: ${({ hide }) => hide && 'none'};\n\n    ${fadeEffects};\n\n    color: ${({ theme }) => theme.colors.grayMuted};\n    font-size: 16px;\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\n`\n\nexport default Small\n","import styled from 'styled-components'\r\n\r\nconst FreeSpace = styled.div`\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-right: ${({ mr }) => (mr ? mr : 0)};\r\n`\r\n\r\nexport default FreeSpace\r\n","import styled from 'styled-components'\r\n\r\nconst Ul = styled.ul`\r\n    list-style: none;\r\n    width: 100%;\r\n`\r\n\r\nexport default Ul\r\n","import styled, { keyframes, css } from 'styled-components'\n\nconst slideInFromLeft = keyframes`\n        0% {\n                color: #ac98be;\n                transform: translateX(calc(-50vw));\n                opacity: 0.4;\n        }\n        100% {\n                transform: translateX(0);\n                opacity: 1;\n        }\n`\n\nconst CityListItem = styled.li`\n    position: relative;\n    transform: translateX(calc(-47vw));\n    animation: ${slideInFromLeft} 1200ms ease-out\n        ${({ index }) => index * 130}ms forwards;\n\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    height: 64px;\n    margin-bottom: 17px;\n    padding-left: 12px;\n\n    font-weight: 100;\n    font-size: 19px;\n    cursor: pointer;\n\n    :hover {\n        border: 1px solid ${({ theme }) => theme.colors.grayDark};\n        padding-left: 11px;\n        ::after {\n            position: absolute;\n            font-family: 'Material Icons', 'Raleway', sans-serif;\n            content: 'keyboard_arrow_right';\n            font-size: 28px;\n            font-weight: 400;\n            color: ${({ theme }) => theme.colors.grayMuted};\n            right: 8px;\n            top: 18px;\n        }\n    }\n`\n\nexport default CityListItem\n","import styled from 'styled-components'\r\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\r\n\r\nconst CloseButton = styled(BUTTON_TEMPLATE)`\r\n    ::before {\r\n        font-family: 'Material Icons', 'Raleway', sans-serif;\r\n        font-size: 34px;\r\n        font-weight: 300;\r\n        content: 'close';\r\n    }\r\n`\r\n\r\nexport default CloseButton\r\n","import FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport styled, { keyframes, css } from 'styled-components'\n\nconst revealTheCard = keyframes`\n    from {\n      clip-path: circle(0 at 0 0);  \n    }\n  \n    to {\n      clip-path: circle(145% at 0 0);    \n    }\n`\n\nconst hideTheCard = keyframes`\n    from {\n      clip-path: circle(145% at 100% 0);  \n    }\n  \n    to {\n      clip-path: circle(0 at 100% 0);    \n    }\n`\n\nconst StyledSelectPlace = styled(FlexColumnCenter)`\n    ${({ hide }) =>\n        hide\n            ? css`\n                  animation: ${revealTheCard} 1000ms ease-out 0ms forwards;\n              `\n            : css`\n                  animation: ${hideTheCard} 1000ms ease-in 0ms forwards;\n                  pointer-events: 'hide';\n              `}\n\n    position: fixed;\n    z-index: 2;\n    top: 0;\n    min-height: 100vh;\n    background: ${({ theme }) => theme.colors.primaryLight};\n    width: ${({ theme }) => theme.widths.asideWidth};\n\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            width: 100vw;\n            padding-top: 5px;\n        }\n    }\n`\n\nexport default StyledSelectPlace\n","import React from 'react'\nimport sleep from 'helpers/sleep'\n\nimport SearchBlueButton from 'styled-components/buttons/SearchBlueButton'\nimport FormatInputText from 'styled-components/input/InputText'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport Small from 'styled-components/small/Small'\nimport FreeSpace from 'styled-components/position/FreeSpace'\nimport Ul from 'styled-components/ul/Ul'\nimport CityListItem from 'styled-components/li/CityListItem'\nimport CloseButton from 'styled-components/buttons/CloseButton'\nimport StyledSelectPlace from 'styled-components/StyledSelectPlace'\n\nclass SelectPlace extends React.Component {\n    state = {\n        startSearch: false,\n        numberCitiesToShow: 5,\n    }\n\n    /// GENERATE LIST OF CITIES ///\n    generatePlacesList = () => {\n        let {\n            apiCitiesData,\n            weatherQuery,\n            getDataFromApi,\n            handleChange,\n        } = this.props.data\n\n        if (typeof apiCitiesData !== 'object' || apiCitiesData[0] === undefined)\n            return [] // This empty is important!\n        // Todo format this text\n\n        // Limit cities to show\n        apiCitiesData = apiCitiesData.slice(0, this.state.numberCitiesToShow)\n\n        // On click event\n        const selectCityAction = async event => {\n            event.target.className += ' slide-to-right'\n            await sleep(1200) // Await to animation end\n\n            await getDataFromApi(weatherQuery, event)\n            this.setState({ startSearch: false })\n            // Modify event.target to hide SelectPlace after chose city\n            event.target = { name: 'isSelectPlaceActive', value: false }\n            console.log(1)\n            await handleChange(event)\n            console.log(2)\n        }\n\n        // List of item to return\n        return apiCitiesData.map((city, index) => (\n            <CityListItem\n                key={city.woeid}\n                data-key={city.woeid}\n                onClick={event => selectCityAction(event)}\n                index={index}\n            >\n                {city.title}\n            </CityListItem>\n        ))\n    }\n\n    render() {\n        const {\n            inputValue,\n            getDataFromApi,\n            handleChange,\n            cityNameQuery,\n            isRunningApiCitiesRequest,\n            apiCitiesData,\n            isSelectPlaceActive,\n        } = this.props.data\n\n        const weatherRequestSent = this.state.startSearch === true\n\n        const citesListElements = weatherRequestSent\n            ? this.generatePlacesList()\n            : ''\n        const notShownCitiesElements =\n            apiCitiesData !== undefined\n                ? apiCitiesData.length - this.state.numberCitiesToShow\n                : false\n\n        const searchButtonAction = event => {\n            this.setState({ startSearch: true })\n            getDataFromApi(cityNameQuery, event)\n        }\n\n        return (\n            <StyledSelectPlace hide={isSelectPlaceActive}>\n                <FlexColumnCenter width='366px'>\n                    {/* CLOSE BUTTON */}\n                    <FlexRowCenter\n                        mb='13px'\n                        mt='13px'\n                        justifyContent='flex-end'\n                    >\n                        <CloseButton\n                            name='isSelectPlaceActive'\n                            value='false'\n                            onClick={handleChange}\n                        />\n                    </FlexRowCenter>\n\n                    {/* SEARCH ENGINE */}\n                    <FlexRowCenter mb='25px'>\n                        <FormatInputText searchIcon>\n                            <input\n                                type='text'\n                                name='searchCity'\n                                placeholder='search location'\n                                autoComplete='off'\n                                value={inputValue}\n                                onChange={handleChange}\n                                onKeyUp={event => {\n                                    event.keyCode === 13 &&\n                                        searchButtonAction(event)\n                                }}\n                            />\n                        </FormatInputText>\n                        <SearchBlueButton\n                            onClick={event => searchButtonAction(event)}\n                        >\n                            Search\n                        </SearchBlueButton>\n                    </FlexRowCenter>\n\n                    {/* LIST OF CITIES */}\n                    <Ul>{!isRunningApiCitiesRequest && citesListElements}</Ul>\n\n                    {/* Reaction to all possible data state */}\n                    {isRunningApiCitiesRequest && this.state.startSearch ? (\n                        <>\n                            <Small mb='2px' fade>\n                                Loading data\n                            </Small>\n                            <Small aria-hidden='true' hide>\n                                This text is just to rerender\n                            </Small>\n                        </>\n                    ) : notShownCitiesElements > 0 ? (\n                        <Small mb='12px' fade>\n                            We hide {notShownCitiesElements} cities\n                        </Small>\n                    ) : citesListElements.length === 0 &&\n                      this.state.startSearch ? (\n                        <Small mb='2px' fastFade>\n                            Nothing found\n                        </Small>\n                    ) : (\n                        <FreeSpace mb='12px' />\n                    )}\n                </FlexColumnCenter>\n            </StyledSelectPlace>\n        )\n    }\n}\n\nexport default SelectPlace\n","import styled, { css } from 'styled-components'\r\n\r\nconst DarkGrayText = styled.p`\r\n    font-size: 18px;\r\n    font-weight: ${({ fontWeight }) => (fontWeight ? fontWeight : 500)};\r\n    color: ${({ theme }) => theme.colors.grayDark};\r\n\r\n    ${({ locationIcon }) =>\r\n        locationIcon &&\r\n        css`\r\n            ::before {\r\n                position: relative;\r\n                top: 0.14em;\r\n                left: -0.1em;\r\n                font-family: 'Material Icons', 'Raleway', sans-serif;\r\n                font-size: 1.2em;\r\n\r\n                font-weight: 300;\r\n                content: 'place';\r\n            }\r\n        `}\r\n`\r\n\r\nexport default DarkGrayText\r\n","import styled from 'styled-components'\r\n\r\nconst TodayTemperatureH1 = styled.h1`\r\n    font-size: 150px;\r\n    font-weight: 400;\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n`\r\n\r\nexport default TodayTemperatureH1\r\n","import styled from 'styled-components'\r\n\r\nconst TodayTemperatureSub = styled.sub`\r\n    //position: relative;\r\n    display: inline-block;\r\n    color: ${({ theme }) => theme.colors.grayLight};\r\n    font-weight: 100;\r\n    font-size: 0.35em;\r\n    transform: translateY(-0.6em);\r\n`\r\n\r\nexport default TodayTemperatureSub\r\n","import styled from 'styled-components'\r\n\r\nconst WeatherName = styled.p`\r\n    font-size: 26px;\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.colors.grayLight};\r\n`\r\n\r\nexport default WeatherName\r\n","import React from 'react'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\r\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\r\nimport DarkGrayText from 'styled-components/p/DarkGrayText'\r\nimport TodayTemperatureH1 from 'styled-components/h1/TodayTemperatureH1'\r\nimport TodayTemperatureSub from 'styled-components/sub/TodayTemperatureSub'\r\nimport WeatherName from 'styled-components/p/WeatherName'\r\n\r\nfunction TodayWeather(props) {\r\n    if (props?.data?.consolidated_weather === undefined) return null\r\n\r\n    const {\r\n        weather_state_abbr: weatherImage,\r\n        weather_state_name: weatherName,\r\n    } = props.data.consolidated_weather[0]\r\n    let {\r\n        the_temp: temperature,\r\n        applicable_date: date,\r\n    } = props.data.consolidated_weather[0]\r\n\r\n    const location = props.data.title\r\n    const PHOTOS_LOCATION = 'https://www.metaweather.com/static/img/weather/'\r\n\r\n    // Format temperature\r\n    const [formattedTemperature, scaleMark] = props.convertTemperature(\r\n        temperature\r\n    )\r\n\r\n    return (\r\n        <FlexColumnCenter as='article' mb='24px'>\r\n            <img\r\n                src={`${PHOTOS_LOCATION}${weatherImage}.svg`}\r\n                alt={`${weatherName} icon`}\r\n                height='234px'\r\n            />\r\n            <TodayTemperatureH1 mt='36px' mb='25px'>\r\n                {formattedTemperature}\r\n                <TodayTemperatureSub>{scaleMark}</TodayTemperatureSub>\r\n            </TodayTemperatureH1>\r\n            <WeatherName>{weatherName}</WeatherName>\r\n            <FlexRowCenter width='160px' mt='62px' mb='40px'>\r\n                <DarkGrayText>Today</DarkGrayText>\r\n                <DarkGrayText as='span' aria-hidden='true'>\r\n                    •\r\n                </DarkGrayText>\r\n                <DarkGrayText as='time' datatime={date}>\r\n                    {dateFormat(date, 'ddd, d mmm')}\r\n                </DarkGrayText>\r\n            </FlexRowCenter>\r\n            <DarkGrayText locationIcon fontWeight='600' as='cite'>\r\n                {location}\r\n            </DarkGrayText>\r\n        </FlexColumnCenter>\r\n    )\r\n}\r\n\r\nexport default TodayWeather\r\n","import styled from 'styled-components'\r\n\r\nconst CARD_TEMPLATE = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    width: 100px;\r\n    height: 100px;\r\n\r\n    background: ${({ theme }) => theme.colors.primaryLight};\r\n`\r\n\r\nexport default CARD_TEMPLATE\r\n","import styled, { keyframes } from 'styled-components'\nimport CARD_TEMPLATE from 'styled-components/div/CARD_TEMPLATE'\n\nconst fade = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-40px, -40px) scale(1.2);\n  }\n        \n  70% {\n    transform: translate(0, 0) scale(1);\n  }      \n        \n  to {\n    opacity: 1;\n  }\n`\n\nconst StyledWeatherForecastCard = styled(CARD_TEMPLATE)`\n    animation: ${fade} ease-out ${({ index }) => (index + 1) * 300 + 200}ms\n        ${({ index }) => index * 300}ms backwards;\n\n    width: 120px;\n    height: 177px;\n    padding: 18px 0;\n    z-index: -10;\n`\n\nexport default StyledWeatherForecastCard\n","import styled from 'styled-components'\r\n\r\nconst ThinWhite = styled.p`\r\n    font-size: 16px;\r\n    font-weight: 100;\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n    \r\n`\r\n\r\nexport default ThinWhite\r\n","import styled from 'styled-components'\r\n\r\nconst ThinLightGray = styled.p`\r\n    font-size: 16px;\r\n    font-weight: 100;\r\n    color: ${({ theme }) => theme.colors.grayLight};\r\n`\r\n\r\nexport default ThinLightGray\r\n","import styled from 'styled-components'\r\n\r\nconst Img = styled.img`\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n`\r\n\r\nexport default Img\r\n","import styled from 'styled-components'\r\nconst WeatherForecastCardsGrid = styled.section`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 120px);\r\n    grid-template-rows: 177px;\r\n    grid-gap: 26px;\r\n\r\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\r\n        & {\r\n            grid-template-columns: repeat(3, 120px);\r\n            grid-template-rows: repeat(2, 177px);\r\n        }\r\n    }\r\n\r\n    @media ${({ theme }) => theme.breakPoints.weatherCardsTwoRows} {\r\n        & {\r\n            grid-template-columns: repeat(2, 120px);\r\n            grid-template-rows: repeat(3, 177px);\r\n        }\r\n    }\r\n`\r\n\r\nexport default WeatherForecastCardsGrid\r\n","import React from 'react'\nimport dateFormat from 'dateformat'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport StyledWeatherForecastCard from 'styled-components/div/StyledWeatherForecastCard'\nimport ThinWhite from 'styled-components/p/ThinWhite'\nimport ThinLightGray from 'styled-components/p/ThinLightGray'\nimport Img from 'styled-components/img/Img'\nimport WeatherForecastCardsGrid from 'styled-components/grid/WeatherForecastCardsGrid'\n\nfunction WeatherForecastCards(props) {\n    if (props?.data?.consolidated_weather === undefined) return null\n\n    const weatherCards = props.data.consolidated_weather\n        .slice(1, 6)\n        .map((cardInfo, index) => {\n            let {\n                weather_state_abbr: weatherImage,\n                weather_state_name: weatherName,\n                min_temp: minTemperature,\n                max_temp: maxTemperature,\n                applicable_date: date,\n                id,\n            } = cardInfo\n            const PHOTOS_LOCATION =\n                'https://www.metaweather.com/static/img/weather/'\n\n            // Format date\n            if (index === 0) date = 'Tomorrow'\n            else date = dateFormat(date, 'ddd d mmm')\n\n            // Format temperature\n            const [\n                formattedMaxTemperature,\n                scaleMark,\n            ] = props.convertTemperature(maxTemperature)\n            const [formattedMinTemperature] = props.convertTemperature(\n                minTemperature\n            )\n\n            return (\n                <StyledWeatherForecastCard key={id} index={index}>\n                    <ThinWhite as='header'>{date}</ThinWhite>\n                    <Img\n                        src={`${PHOTOS_LOCATION}${weatherImage}.svg`}\n                        alt={`${weatherName} icon`}\n                        height='56px'\n                        mt='-5px'\n                    />\n                    <FlexRowCenter width='70px'>\n                        <ThinWhite>\n                            {formattedMaxTemperature}\n                            {scaleMark}\n                        </ThinWhite>\n                        <ThinLightGray>\n                            {formattedMinTemperature}\n                            {scaleMark}\n                        </ThinLightGray>\n                    </FlexRowCenter>\n                </StyledWeatherForecastCard>\n            )\n        })\n\n    return (\n        // todo align like in figma\n        <FlexRowCenter justifyContent='center' mb='32px'>\n            <WeatherForecastCardsGrid>{weatherCards}</WeatherForecastCardsGrid>\n        </FlexRowCenter>\n    )\n}\n\nexport default WeatherForecastCards\n","import styled, { css } from 'styled-components'\r\nimport StyledButtonTemplate from 'styled-components/buttons/BUTTON_TEMPLATE'\r\n\r\nconst TemperatureScaleButton = styled(StyledButtonTemplate)`\r\n    position: relative;\r\n    height: 40px;\r\n    width: 40px;\r\n\r\n    background: ${({ theme }) => theme.colors.grayDark};\r\n    border-radius: 50%;\r\n\r\n    color: ${({ theme }) => theme.colors.white};\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    letter-spacing: -8px;\r\n\r\n    ::before {\r\n        content: '°';\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 11px;\r\n\r\n        font-size: 25px;\r\n        font-weight: 500;\r\n    }\r\n\r\n    :focus {\r\n        -moz-outline-radius: 50%;\r\n    }\r\n\r\n    ${({ active }) =>\r\n        active &&\r\n        css`\r\n            background: ${({ theme }) => theme.colors.white};\r\n            color: ${({ theme }) => theme.colors.primaryDark};\r\n            font-weight: 600;\r\n\r\n            ::before {\r\n                font-weight: 600;\r\n            }\r\n        `}\r\n`\r\n\r\nexport default TemperatureScaleButton\r\n","import React from 'react'\r\nimport TemperatureScaleButton from 'styled-components/buttons/TemperatureScaleButton'\r\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\r\nimport FreeSpace from 'styled-components/position/FreeSpace'\r\n\r\nfunction SwitchTemperatureScale(props) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const { handleChange, selectedTemperatureScale } = props.data\r\n    return (\r\n        <FlexRowCenter justifyContent='flex-end' mb='25px'>\r\n            <TemperatureScaleButton\r\n                active={selectedTemperatureScale === 'c' && true}\r\n                onClick={handleChange}\r\n                name='temperatureScale'\r\n                value='c'\r\n            >\r\n                C {/* ° is ::before */}\r\n            </TemperatureScaleButton>\r\n\r\n            <FreeSpace mr='12px' />\r\n\r\n            <TemperatureScaleButton\r\n                active={selectedTemperatureScale === 'f' && true}\r\n                onClick={handleChange}\r\n                name='temperatureScale'\r\n                value='f'\r\n            >\r\n                F {/* ° is ::before */}\r\n            </TemperatureScaleButton>\r\n        </FlexRowCenter>\r\n    )\r\n}\r\n\r\nexport default SwitchTemperatureScale\r\n","import styled, { keyframes } from 'styled-components'\nimport CARD_TEMPLATE from 'styled-components/div/CARD_TEMPLATE'\nconst fade = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-20px, -20px) scale(1.2);\n  }\n  \n  70% {\n     transform: translate(0, 0) scale(1);\n  }\n        \n  to {\n    opacity: 1;\n  }\n`\n\nconst StyledHighlightCard = styled(CARD_TEMPLATE)`\n    animation: ${fade} ease-out ${({ index }) => index * 200 + 800}ms\n        ${({ index }) => index * 300 + 300}ms backwards;\n\n    height: ${({ small }) => (small ? '160px' : '204px')};\n    width: 328px;\n\n    padding-top: 22px;\n    padding-bottom: 26px;\n\n    margin-left: ${({ ml }) => ml && ml};\n    margin-right: ${({ mr }) => mr && mr};\n`\n\nexport default StyledHighlightCard\n","import styled from 'styled-components'\r\n\r\nconst HighlightsGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 328px);\r\n    grid-template-rows: 204px 160px;\r\n    grid-gap: 48px;\r\n\r\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\r\n        & {\r\n            grid-template-columns: 328px;\r\n            grid-template-rows: repeat(2, 204px) repeat(2, 160px);\r\n            grid-gap: 30px;\r\n        }\r\n    }\r\n`\r\n\r\nexport default HighlightsGrid\r\n","import styled from 'styled-components'\r\n\r\nconst HighlightHeader = styled.header`\r\n    font-size: 16px;\r\n    font-weight: 100;\r\n`\r\n\r\nexport default HighlightHeader\r\n","import styled from 'styled-components'\r\n\r\nconst BigBold = styled.p`\r\n    font-size: 62px;\r\n    font-weight: 900;\r\n    word-spacing: ${({ WordSpacing }) => (WordSpacing ? WordSpacing : 0)};\r\n    transform: translateY(${({ y }) => y && y});\r\n`\r\n\r\nexport default BigBold\r\n","import styled from 'styled-components'\r\n\r\nconst HighlightSub = styled.sub`\r\n    //position: relative;\r\n    display: inline-block;\r\n    font-weight: 300;\r\n    font-size: 0.5em;\r\n    transform: translateY(-0.5em);\r\n`\r\n\r\nexport default HighlightSub\r\n","import styled from 'styled-components'\r\n\r\nconst WindDirectionIcon = styled.div`\r\n    position: relative;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 50%;\r\n    transform: rotate(${({ rotateDeg }) => rotateDeg}deg);\r\n    height: 27px;\r\n    width: 27px;\r\n\r\n    ::after {\r\n        position: absolute;\r\n        top: calc(0.4em);\r\n        left: calc(0.45em);\r\n        font-family: 'Material Icons', 'Raleway', sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 300;\r\n        content: 'navigation';\r\n    }\r\n`\r\n\r\nexport default WindDirectionIcon\r\n","import styled from 'styled-components'\r\n\r\nconst ProgressBarSmall = styled.small`\r\n    color: ${({ theme }) => theme.colors.grayLight};\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    align-self: ${({ align }) => align};\r\n    transform: translateX(${({ x }) => x && x});\r\n`\r\n\r\nexport default ProgressBarSmall\r\n","import styled from 'styled-components'\r\n\r\nconst HumidityMeter = styled.meter`\r\n    width: 100%;\r\n    height: 6px;\r\n    border-radius: 50px;\r\n\r\n    ::-webkit-meter-bar {\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n        height: 6px;\r\n        border: 0 solid transparent;\r\n    }\r\n\r\n    ::-webkit-meter-optimum-value {\r\n        background-color: ${({ theme }) => theme.colors.complementary};\r\n        background-size: 100% 100%;\r\n        border-bottom-left-radius: 6px;\r\n        border-top-left-radius: 6px;\r\n        border: 0 solid transparent;\r\n    }\r\n`\r\n\r\nexport default HumidityMeter\r\n","import styled from 'styled-components'\r\n\r\nconst H2 = styled.h2`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\r\n    transform: translateX(-250px);\r\n\r\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\r\n        transform: translateX(-62px);\r\n    }\r\n`\r\n\r\nexport default H2\r\n","import React from 'react'\nimport StyledHighlightCard from 'styled-components/div/StyledHighlightCard'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport HighlightsGrid from 'styled-components/grid/HighlightsGrid'\nimport HighlightHeader from 'styled-components/header/HighlightHeader'\nimport BigBold from 'styled-components/p/BigBold'\nimport HighlightSub from 'styled-components/sub/HighlightSub'\nimport ThinWhite from 'styled-components/p/ThinWhite'\nimport WindDirectionIcon from 'styled-components/icon/WindDirectionIcon'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport ProgressBarSmall from 'styled-components/small/ProgressBarSmall'\nimport HumidityMeter from 'styled-components/meter/HumidityMeter'\nimport H2 from 'styled-components/h2/H2'\n\nfunction TodayHighlights(props) {\n    if (props?.data?.consolidated_weather === undefined) return null\n\n    let {\n        wind_direction_compass: windDirection,\n        wind_direction: compassRotate,\n        wind_speed: windSpeed,\n        air_pressure: airPressure,\n        humidity,\n        visibility,\n    } = props.data.consolidated_weather[0]\n\n    compassRotate = Math.round(compassRotate)\n    windSpeed = Math.round(windSpeed)\n    airPressure = Math.round(airPressure)\n    humidity = Math.round(humidity)\n    visibility = (Math.round(visibility * 10) / 10).toString().replace('.', ',')\n\n    return (\n        <FlexColumnCenter mt='20px' as='section' width='100%'>\n            <H2 mb='20px'>Today's Highlights</H2>\n            <HighlightsGrid>\n                <StyledHighlightCard key={1} as='article' index='0'>\n                    <HighlightHeader>Wind status</HighlightHeader>\n                    <BigBold WordSpacing='-0.8rem'>\n                        {windSpeed} <HighlightSub> mph </HighlightSub>\n                    </BigBold>\n                    <FlexRowCenter width='80px' justifyContent='space-around'>\n                        <WindDirectionIcon rotateDeg={compassRotate} />\n                        <ThinWhite>{windDirection}</ThinWhite>\n                    </FlexRowCenter>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard key={2} as='article' index='1'>\n                    <HighlightHeader>Humidity</HighlightHeader>\n                    <BigBold WordSpacing='-0.8rem' y='7px'>\n                        {humidity} <HighlightSub> % </HighlightSub>\n                    </BigBold>\n                    <FlexColumnCenter width='240px' height='27px' y='7px'>\n                        <FlexRowCenter>\n                            <ProgressBarSmall>0</ProgressBarSmall>\n                            <ProgressBarSmall x='10px'>50</ProgressBarSmall>\n                            <ProgressBarSmall>100</ProgressBarSmall>\n                        </FlexRowCenter>\n                        <HumidityMeter\n                            value={humidity}\n                            min='0'\n                            max='100'\n                            low='0'\n                            high='100'\n                        />\n                        <ProgressBarSmall align='flex-end'>%</ProgressBarSmall>\n                    </FlexColumnCenter>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard key={3} as='article' index='2' small>\n                    <HighlightHeader>Visibility</HighlightHeader>\n                    <BigBold>\n                        {visibility} <HighlightSub>miles</HighlightSub>\n                    </BigBold>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard key={4} as='article' index='3' small>\n                    <HighlightHeader>Air Pressure</HighlightHeader>\n                    <BigBold>\n                        {airPressure} <HighlightSub>mb</HighlightSub>\n                    </BigBold>\n                </StyledHighlightCard>\n            </HighlightsGrid>\n        </FlexColumnCenter>\n    )\n}\n\nexport default TodayHighlights\n","import styled from 'styled-components'\r\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\r\n\r\nconst StyledLoadingWeatherData = styled(FlexColumnCenter)`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    \r\n    //padding: 10vh 0 10vh;\r\n    z-index: 10;\r\n    justify-content: center;\r\n\r\n    background-color: ${({ theme }) => theme.colors.primaryLight};\r\n`\r\n\r\nexport default StyledLoadingWeatherData\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst LoadIcon = styled.div`\r\n  position: relative;\r\n  animation: ${rotate} 2000ms linear infinite normal;\r\n  margin-bottom: ${({ mb }) => (mb ? mb : 0)};\r\n  \r\n  ::before {\r\n    position: absolute;\r\n    left: -21px;\r\n    top: -21px;\r\n    font-family: 'Material Icons', 'Raleway', sans-serif;\r\n    font-size: 42px;\r\n    font-weight: 300;\r\n    content: 'refresh';\r\n  }\r\n`\r\n\r\nexport default LoadIcon","import React from 'react'\r\nimport StyledLoadingWeatherData from 'styled-components/StyledLoadingWeatherData'\r\nimport Small from 'styled-components/small/Small'\r\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\r\nimport ThinWhite from 'styled-components/p/ThinWhite'\r\nimport LoadIcon from 'styled-components/icon/LoadIcon'\r\n\r\nfunction LoadingWeatherData() {\r\n    return (\r\n        <StyledLoadingWeatherData>\r\n            <FlexColumnCenter mt=\"38vh\">\r\n                <LoadIcon mb=\"20px\"/>\r\n                <p>Loading data</p>\r\n                <Small >Please share your localization</Small>\r\n            </FlexColumnCenter>\r\n            <FlexColumnCenter mt=\"35vh\" pr=\"10px\" pl=\"10px\">\r\n                <ThinWhite>\r\n                    If data don't load go to <a href=\"https://cors-anywhere.herokuapp.com/corsdemo\" target=\"_blank\"> this website </a> and click the button\r\n                </ThinWhite>\r\n            </FlexColumnCenter>\r\n        </StyledLoadingWeatherData>\r\n    )\r\n}\r\n\r\nexport default LoadingWeatherData\r\n","function stringToBool(string) {\r\n    if (string === 'true') return true\r\n    if (string === 'false') return false\r\n    return string\r\n}\r\n\r\nexport default stringToBool\r\n","async function getPosition() {\r\n    // Simple wrapper\r\n    return new Promise((res, rej) => {\r\n        navigator.geolocation.getCurrentPosition(res, rej)\r\n    })\r\n}\r\n\r\nasync function getLatLong() {\r\n    let lat, long\r\n    try {\r\n        const position = await getPosition()\r\n        lat = position.coords.latitude\r\n        long = position.coords.longitude\r\n    } catch {\r\n        ;[lat, long] = [51.506321, -0.12714] // London cords\r\n    }\r\n\r\n    return [lat, long]\r\n}\r\n\r\nexport default getLatLong\r\n","const white = '#E7E7EB' // IF YOU WILL CHANGE WHITE IN COLORS CHANGE ALSO THIS WHITE\r\n\r\nconst colors = {\r\n    primaryLight: '#1E213A',\r\n    primaryDark: '#100E1D',\r\n    complementary: '#FFEC65',\r\n    white: '#E7E7EB',\r\n    grayLight: '#A09FB1',\r\n    grayDark: '#88869D',\r\n    grayMuted: '#616475',\r\n    // TEMPERATURE SCALE BUTTONS\r\n    unselectedMainBtnBackground: '#585676',\r\n    unselectedMainBtnText: white,\r\n    selectedMainBtnBackground: white,\r\n    selectedMainBtnText: '#110E3C',\r\n    // LEFT ASIDE BUTTONS\r\n    asideBtnBackground: '#6E707A',\r\n    asideBtnBackgroundAlt: '#3C47E9',\r\n}\r\n\r\nexport default colors\r\n","import colors from 'utils/colors'\r\nimport widths from 'utils/widths'\r\nimport breakPoints from 'utils/breakPoints'\r\n\r\nconst theme = {\r\n    colors,\r\n    widths,\r\n    breakPoints,\r\n}\r\n\r\nexport default theme\r\n","const widths = {\r\n    asideWidth: '460px',\r\n}\r\n\r\nexport default widths\r\n","const breakPoints = {\r\n    verticalRotation:\r\n        'screen and (max-width: 1230px), screen and  (orientation:portrait)',\r\n    weatherCardsTwoRows: 'screen and (max-width: 480px) ',\r\n    smallScreen: 'screen and (max-width: 770px)',\r\n}\r\n\r\nexport default breakPoints\r\n","import React from 'react'\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport theme from 'utils/theme'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  body {\r\n    font-weight: 600;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    background: ${({ theme }) => theme.colors.primaryDark};\r\n    overflow-x: hidden; // Disable horizontal scrollbar\r\n    overflow: overlay; // For scroll bar // Todo Replace to more supported way\r\n  }\r\n\r\n  @media ${({ theme }) => theme.breakPoints.verticalRotation} {\r\n      body{\r\n        overflow-x: hidden; // Disable horizontal scrollbar\r\n      }\r\n    }\r\n  \r\n  cite {\r\n    font-style: normal;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #621b62;\r\n  }\r\n\r\n  a:active {\r\n    color: #4e5470;\r\n  }\r\n\r\n  *, *::before, *::after {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Raleway', sans-serif;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  :root {\r\n    font-size: 16px;\r\n  }\r\n\r\n  // SCROLLBAR\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: rgba(99, 99, 99, 0.9);\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  // Off animation if user turn off this on his system\r\n  @media (prefers-reduced-motion: reduce) {\r\n    *, ::before, ::after {\r\n      animation-delay: -1ms !important;\r\n      animation-duration: 1ms !important;\r\n      animation-iteration-count: 1 !important;\r\n      background-attachment: initial !important;\r\n      scroll-behavior: auto !important;\r\n      transition-duration: 0s !important;\r\n      transition-delay: 0s !important;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nconst StyleWrapper = styled.div`\r\n    display: flex;\r\n    min-height: 100vh;\r\n    width: 100vw;\r\n    background-color: ${({ theme }) => theme.colors.primaryDark};\r\n\r\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\r\n        & {\r\n            flex-direction: column;\r\n        }\r\n    }\r\n`\r\n\r\nconst Layout = ({ children }) => (\r\n    <ThemeProvider theme={theme}>\r\n        <>\r\n            <GlobalStyle />\r\n            <StyleWrapper>{children}</StyleWrapper>\r\n        </>\r\n    </ThemeProvider>\r\n)\r\n\r\nexport default Layout\r\n","import styled from 'styled-components'\r\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\r\n\r\nconst StyledAside = styled(FlexColumnCenter)`\r\n    width: ${({ theme }) => theme.widths.asideWidth};\r\n    background-color: ${({ theme }) => theme.colors.primaryLight};\r\n    padding: 25px calc(100% / 25) 0 calc(100% / 25);\r\n\r\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\r\n        & {\r\n            width: 100vw;\r\n        }\r\n    }\r\n`\r\n\r\nexport default StyledAside\r\n","import styled from 'styled-components'\n\nconst StyledMain = styled.main`\n    background-color: ${({ theme }) => theme.colors.primaryDark};\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    width: calc(100vw - ${({ theme }) => theme.widths.asideWidth});\n    padding: 25px calc(${({ theme }) => theme.widths.asideWidth} / 7);\n\n    z-index: 2;\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            width: 100vw;\n            z-index: 1;\n        }\n    }\n`\n\nexport default StyledMain\n","import styled from 'styled-components'\r\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\r\n\r\nconst SearchGrayButton = styled(BUTTON_TEMPLATE)`\r\n    // Default button\r\n    height: 40px;\r\n    padding: 18px;\r\n    background: ${({ theme }) => theme.colors.asideBtnBackground};\r\n`\r\n\r\nexport default SearchGrayButton\r\n","import styled from 'styled-components'\r\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\r\n\r\nconst LocationButton = styled(BUTTON_TEMPLATE)`\r\n    height: 40px;\r\n    width: 40px;\r\n\r\n    background: ${({ theme }) => theme.colors.asideBtnBackground};\r\n    border-radius: 50%;\r\n\r\n    ::before {\r\n        font-family: 'Material Icons', 'Raleway', sans-serif;\r\n        font-size: 26px;\r\n        font-weight: 300;\r\n        content: 'gps_fixed';\r\n    }\r\n\r\n    :focus {\r\n        -moz-outline-radius: 50%;\r\n    }\r\n`\r\n\r\nexport default LocationButton\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst CloudIcon = styled.div`\r\n      position: absolute;\r\n      top: ${({top}) => top};\r\n      left: ${({left1}) => left1};\r\n      width: ${({size}) => size};\r\n      height: ${({size}) => size};\r\n      background-image: url(\"https://www.metaweather.com/static/img/weather/sn.svg\");\r\n      clip-path: polygon(0% 0%, 100% 0%, 100% 60%, 0% 60%);\r\n      opacity: 0.1;\r\n      z-index: 1;\r\n\r\n      @media ${({ theme }) => theme.breakPoints.verticalRotation} {\r\n        & {\r\n          left: ${({left2}) => left2};\r\n          ${({right2}) => right2 && css`\r\n            left: unset;\r\n          `}\r\n          right: ${({right2}) => right2};\r\n        }\r\n  }\r\n`\r\n\r\nexport default CloudIcon","import React from 'react'\n// COMPONENTS\nimport SelectPlace from 'components/SelectPlace'\nimport TodayWeather from 'components/TodayWeather'\nimport WeatherForecastCards from 'components/WeatherForecastCards'\nimport SwitchTemperatureScale from 'components/SwitchTemperatureScale'\nimport TodayHighlights from 'components/TodayHighlights'\nimport LoadingWeatherData from 'components/LoadingWeatherData'\n// FUNCTIONS\nimport stringToBool from 'helpers/stringToBool'\nimport getLatLong from 'helpers/getLatLong'\nimport sleep from 'helpers/sleep'\n// STYLED COMPONENTS\nimport Layout from 'layout/Layout'\nimport StyledAside from 'styled-components/StyledAside'\nimport StyledMain from 'styled-components/StyledMain'\nimport SearchGreyButton from 'styled-components/buttons/SearchGreyButton'\nimport LocationButton from 'styled-components/buttons/LocationButton'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport Small from 'styled-components/small/Small'\nimport CloudIcon from './styled-components/icon/CloudIcon'\n\nconst CORS_ANYWHERE_PREFIX = 'https://cors-anywhere.herokuapp.com/'\nconst API_ADDRESS = 'www.metaweather.com/'\nconst PREFIX = CORS_ANYWHERE_PREFIX + API_ADDRESS\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.getDataFromApi = this.getDataFromApi.bind(this)\n        this.cityNameQuery = this.cityNameQuery.bind(this)\n        this.weatherQuery = this.weatherQuery.bind(this)\n        // prettier-ignore\n        this.currentLocationQueryProcedure = this.currentLocationQueryProcedure.bind(this)\n        // prettier-ignore\n        this.getWeoidFromCurrentLocation = this.getWeoidFromCurrentLocation.bind(this)\n    }\n\n    state = {\n        apiAddress: PREFIX + 'api/location/', // Production withth cros-anyware\n        // apiAddress: 'api/location/', // Develop with http-proxy-middleware\n        apiWeatherData: [],\n        isRunningApiWeatherRequest: false,\n\n        apiCitiesData: [],\n        isRunningApiCitiesRequest: false,\n        searchCity: '',\n\n        temperatureScale: 'c',\n        isSelectPlaceActive: false,\n    }\n\n    async componentDidMount() {\n        await this.currentLocationQueryProcedure()\n    }\n\n    ///////// GET DATA FROM API /////////\n    async getDataFromApi(queryFunction, event) {\n        const [response, storeLocalization] = await queryFunction(event)\n        // Save data to state\n        try {\n            if (response.status === 200 && response.ok === true) {\n                const apiData = await response.json()\n                this.setState({ [storeLocalization]: apiData })\n            } else\n                return Error(\n                    `Failed connect to API: ${response.status} ${response.statusText}`\n                )\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    async cityNameQuery() {\n        const { apiAddress, searchCity } = this.state\n\n        this.setState({ isRunningApiCitiesRequest: true })\n        const apiResponse = await fetch(\n            `${apiAddress}search/?query=${searchCity.trim()}`\n        )\n        this.setState({ isRunningApiCitiesRequest: false })\n\n        return [apiResponse, 'apiCitiesData']\n    }\n\n    async weatherQuery(event) {\n        // Restart search engine data\n        this.setState({ searchCity: '', apiCitiesData: '' })\n\n        const key = event.target.dataset.key\n        const apiAddress = this.state.apiAddress\n\n        this.setState({ isRunningApiWeatherRequest: true })\n        const apiResponse = await fetch(`${apiAddress}${key}/`)\n        await sleep(150) // Wait to load images\n        this.setState({ isRunningApiWeatherRequest: false })\n\n        return [apiResponse, 'apiWeatherData']\n    }\n\n    async currentLocationQueryProcedure() {\n        this.setState({ isRunningApiWeatherRequest: true })\n        const woeid = await this.getWeoidFromCurrentLocation()\n        const fakeEvent = { target: { dataset: { key: woeid } } }\n        await this.getDataFromApi(await this.weatherQuery, fakeEvent)\n    }\n\n    ////RELATED TO GET DATA FROM API////\n\n    async getWeoidFromCurrentLocation() {\n        const { apiAddress } = this.state\n        const [lat, long] = await getLatLong()\n\n        this.setState({ isRunningApiCitiesRequest: true })\n        const apiLatLongResponse = await fetch(\n            `${apiAddress}search/?lattlong=${lat},${long}`\n        )\n        this.setState({ isRunningApiCitiesRequest: false })\n        const nearestCity = await apiLatLongResponse.json()\n        const woeid = await nearestCity[0].woeid\n\n        return woeid\n    }\n\n    /////////////////////////////////////\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({ [name]: stringToBool(value) })\n    }\n\n    //////////// TEMPERATURE ////////////\n\n    convertTemperature = centigradeTemperature => {\n        // Output => [TemperatureInSelectedScale, SelectedScaleMark]\n        if (this?.state?.temperatureScale === undefined)\n            return Error('No data in temperatureScale stata')\n        if (centigradeTemperature === undefined)\n            return Error(\"convertTemperature don't get any parameter\")\n\n        centigradeTemperature = parseFloat(centigradeTemperature)\n        if (this.state.temperatureScale === 'c')\n            return [Math.round(centigradeTemperature), '°C']\n        if (this.state.temperatureScale === 'f')\n            return [Math.round((centigradeTemperature * 9) / 5) + 32, '°F']\n    }\n\n    render() {\n        const selectLocalizationPack = {\n            inputValue: this.state.searchCity,\n            apiCitiesData: this.state.apiCitiesData,\n            isRunningApiCitiesRequest: this.state.isRunningApiCitiesRequest,\n            isSelectPlaceActive: this.state.isSelectPlaceActive,\n            handleChange: this.handleChange,\n            getDataFromApi: this.getDataFromApi,\n            cityNameQuery: this.cityNameQuery,\n            weatherQuery: this.weatherQuery,\n        }\n\n        return (\n            <Layout>\n                {this.state.isRunningApiWeatherRequest && (\n                    <LoadingWeatherData />\n                )}\n\n                <StyledAside as='aside'>\n                    <SelectPlace data={selectLocalizationPack} />\n\n                    {/* prettier-ignore */}\n                    <CloudIcon size='176px' left1='-5%' top='16%' right2='79%' />\n                    {/* prettier-ignore */}\n                    <CloudIcon size='215px' left1='-4%' top='45%' right2='74%' />\n                    <CloudIcon size='176px' left1='25%' top='32%' left2='80%' />\n                    <CloudIcon size='127px' left1='27%' top='62%' left2='84%' />\n\n                    <FlexRowCenter mb='52px' width='366px'>\n                        <SearchGreyButton\n                            onClick={() =>\n                                this.setState({ isSelectPlaceActive: true })\n                            }\n                        >\n                            Search for places\n                        </SearchGreyButton>\n                        <LocationButton\n                            onClick={this.currentLocationQueryProcedure}\n                        />\n                    </FlexRowCenter>\n                    <TodayWeather\n                        data={this.state.apiWeatherData}\n                        convertTemperature={this.convertTemperature}\n                    />\n                </StyledAside>\n\n                <StyledMain>\n                    <SwitchTemperatureScale\n                        data={{\n                            handleChange: this.handleChange,\n                            selectedTemperatureScale: this.state\n                                .temperatureScale,\n                        }}\n                    />\n\n                    <WeatherForecastCards\n                        data={this.state.apiWeatherData}\n                        convertTemperature={this.convertTemperature}\n                    />\n\n                    <TodayHighlights\n                        data={this.state.apiWeatherData}\n                        key={\n                            this?.state?.apiWeatherData\n                                ?.consolidated_weather?.[0]?.id\n                        }\n                    />\n                    <Small style={{ alignSelf: 'center', marginTop: '22px' }}>\n                        Created by Packman700\n                    </Small>\n                </StyledMain>\n            </Layout>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals.js'\nimport App from './App.js'\nimport './style.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}