{"version":3,"sources":["reportWebVitals.js","styled-components/buttons/BUTTON_TEMPLATE.js","styled-components/buttons/SearchBlueButton.js","styled-components/input/InputText.js","styled-components/position/FlexRowCenter.js","styled-components/position/FlexColumnCenter.js","styled-components/small/Small.js","styled-components/position/FreeSpace.js","styled-components/ul/Ul.js","styled-components/li/CityListItem.js","styled-components/buttons/CloseButton.js","styled-components/StyledSelectPlace.js","components/SelectPlace.js","styled-components/p/DarkGrayText.js","styled-components/h1/TodayTemperatureH1.js","styled-components/sub/TodayTemperatureSub.js","styled-components/p/WeatherName.js","components/TodayWeather.js","styled-components/div/CARD_TEMPLATE.js","styled-components/div/StyledWeatherForecastCard.js","styled-components/p/ThinWhite.js","styled-components/p/ThinLightGray.js","styled-components/img/Img.js","styled-components/grid/WeatherForecastCardsGrid.js","components/WeatherForecastCards.js","styled-components/buttons/TemperatureScaleButton.js","components/SwitchTemperatureScale.js","styled-components/div/StyledHighlightCard.js","styled-components/grid/HighlightsGrid.js","styled-components/header/HighlightHeader.js","styled-components/p/BigBold.js","styled-components/sub/HighlightSub.js","styled-components/icon/WindDirectionIcon.js","styled-components/small/ProgressBarSmall.js","styled-components/meter/HumidityMeter.js","styled-components/h2/H2.js","components/TodayHighlights.js","styled-components/StyledLoadingWeatherData.js","components/LoadingWeatherData.js","helpers/stringToBool.js","helpers/getLatLong.js","utils/colors.js","utils/theme.js","utils/widths.js","utils/breakPoints.js","layout/Layout.js","styled-components/StyledAside.js","styled-components/StyledMain.js","styled-components/buttons/SearchGreyButton.js","styled-components/buttons/LocationButton.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BUTTON_TEMPLATE","styled","button","theme","colors","white","SearchBlueButton","asideBtnBackgroundAlt","InputTextDiv","div","searchIcon","grayMuted","css","FormatInputText","props","children","FlexRowCenter","justifyContent","width","mb","mt","FlexColumnCenter","y","Small","small","FreeSpace","mr","Ul","ul","CityListItem","li","grayDark","CloseButton","StyledSelectPlace","primaryLight","widths","asideWidth","breakPoints","verticalRotation","SelectPlace","state","startSearch","numberCitiesToShow","generatePlacesList","data","apiCitiesData","weatherQuery","getDataFromApi","handleChange","undefined","slice","map","city","data-key","woeid","onClick","event","setState","target","name","value","selectCityAction","title","this","inputValue","cityNameQuery","isRunningApiCitiesRequest","citesListElements","notShownCitiesElements","length","type","placeholder","autoComplete","onChange","searchButtonAction","React","Component","DarkGrayText","p","fontWeight","locationIcon","TodayTemperatureH1","h1","TodayTemperatureSub","sub","grayLight","WeatherName","TodayWeather","consolidated_weather","weatherImage","weather_state_abbr","weatherName","weather_state_name","temperature","the_temp","date","applicable_date","location","convertTemperature","formattedTemperature","scaleMark","as","src","alt","height","aria-hidden","datatime","dateFormat","CARD_TEMPLATE","StyledWeatherForecastCard","ThinWhite","ThinLightGray","Img","img","WeatherForecastCardsGrid","section","smallScreen","weatherCardsTwoRows","WeatherForecastCards","weatherCards","cardInfo","index","minTemperature","min_temp","maxTemperature","max_temp","id","formattedMaxTemperature","formattedMinTemperature","TemperatureScaleButton","StyledButtonTemplate","active","primaryDark","SwitchTemperatureScale","selectedTemperatureScale","StyledHighlightCard","ml","HighlightsGrid","HighlightHeader","header","BigBold","WordSpacing","HighlightSub","WindDirectionIcon","rotateDeg","ProgressBarSmall","align","x","HumidityMeter","meter","complementary","H2","h2","TodayHighlights","windDirection","wind_direction_compass","compassRotate","wind_direction","windSpeed","wind_speed","airPressure","air_pressure","humidity","visibility","Math","round","toString","replace","min","max","low","high","rotate","keyframes","StyledLoadingWeatherData","LoadingWeatherData","stringToBool","string","getPosition","a","Promise","res","rej","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","getLatLong","unselectedMainBtnBackground","unselectedMainBtnText","selectedMainBtnBackground","selectedMainBtnText","asideBtnBackground","GlobalStyle","createGlobalStyle","StyleWrapper","Layout","StyledAside","StyledMain","main","SearchGrayButton","LocationButton","App","apiAddress","PREFIX","apiWeatherData","isRunningApiWeatherRequest","searchCity","temperatureScale","isSelectPlaceActive","centigradeTemperature","Error","parseFloat","bind","currentLocationQueryProcedure","getWeoidFromCurrentLocation","queryFunction","response","storeLocalization","status","ok","json","apiData","statusText","console","error","fetch","trim","apiResponse","key","dataset","fakeEvent","apiLatLongResponse","nearestCity","selectLocalizationPack","SearchGreyButton","style","alignSelf","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAceA,EAdS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yFCOTQ,EAbSC,IAAOC,OAAV,8PASR,qBAAGC,MAAkBC,OAAOC,SCD1BC,EAPUL,YAAOD,EAAPC,CAAH,qHAIJ,qBAAGE,MAAkBC,OAAOG,yB,eCJxCC,EAAeP,IAAOQ,IAAV,2iBAQJ,qBAAGN,MAAkBC,OAAOC,SAOzB,qBAAGK,WAA+B,QAAU,WAC5C,qBAAGP,MAAkBC,OAAOO,aAGtB,qBAAGD,WACD,OAAS,KAO5B,qBAAGA,YAEDE,YADU,mVAOO,qBAAGT,MAAkBC,OAAOO,gBAgBtCE,EATS,SAAAC,GAAK,OACzB,cAACN,EAAD,2BAAkBM,GAAlB,aAA0BA,EAAMC,aC/BrBC,EAbOf,IAAOQ,IAAV,8OAMI,gBAAGQ,EAAH,EAAGA,eAAH,OACfA,GAAkC,mBAC7B,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UACxB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAC1B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KCA1BC,EAVUpB,IAAOQ,IAAV,oNAKT,gBAAGS,EAAH,EAAGA,MAAH,OAAgBA,GAAgB,UACxB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAChB,gBAAGG,EAAH,EAAGA,EAAH,OAAWA,GAAKA,KCD7BC,EANDtB,IAAOuB,MAAV,4FACE,qBAAGrB,MAAkBC,OAAOO,aAEpB,gBAAGQ,EAAH,EAAGA,GAAH,OAAaA,GAAU,KCE7BM,EALGxB,IAAOQ,IAAV,6EACM,gBAAGU,EAAH,EAAGA,GAAH,OAAaA,GAAU,KACxB,gBAAGO,EAAH,EAAGA,GAAH,OAAaA,GAAU,KCG5BC,EALJ1B,IAAO2B,GAAV,qEC+BOC,EA/BM5B,IAAO6B,GAAV,+oBAeU,qBAAG3B,MAAkBC,OAAO2B,YASnC,qBAAG5B,MAAkBC,OAAOO,aCdlCqB,EATK/B,YAAOD,EAAPC,CAAH,kMCgBFgC,EAhBWhC,YAAOoB,EAAPpB,CAAH,4PAKL,qBAAGE,MAAkBC,OAAO8B,gBACjC,qBAAG/B,MAAkBgC,OAAOC,cAE5B,qBAAGjC,MAAkBkC,YAAYC,oBCgI/BC,E,4MA9HXC,MAAQ,CACJC,aAAa,EACbC,mBAAoB,G,EAIxBC,mBAAqB,WAAO,IAAD,EAMnB,EAAK7B,MAAM8B,KAJXC,EAFmB,EAEnBA,cACAC,EAHmB,EAGnBA,aACAC,EAJmB,EAInBA,eACAC,EALmB,EAKnBA,aAGJ,GAA6B,kBAAlBH,QAAmDI,IAArBJ,EAAc,GACnD,MAAO,GAIXA,EAAgBA,EAAcK,MAAM,EAAG,EAAKV,MAAME,oBAalD,OAAOG,EAAcM,KAAI,SAAAC,GAAI,OACzB,cAAC,EAAD,CAEIC,WAAUD,EAAKE,MACfC,QAAS,SAAAC,GAAK,OAdG,SAAAA,GACrBT,EAAeD,EAAcU,GAC7B,EAAKC,SAAS,CAAEhB,aAAa,IAG7Be,EAAME,OAAS,CAAEC,KAAM,sBAAuBC,OAAO,GACrDZ,EAAaQ,GAQSK,CAAiBL,IAHvC,SAKKJ,EAAKU,OAJDV,EAAKE,W,4CAStB,WAAU,IAAD,SAQDS,KAAKjD,MAAM8B,KANXoB,EAFC,EAEDA,WACAjB,EAHC,EAGDA,eACAC,EAJC,EAIDA,aACAiB,EALC,EAKDA,cACAC,EANC,EAMDA,0BACArB,EAPC,EAODA,cAKEsB,GAFgD,IAA3BJ,KAAKvB,MAAMC,YAGhCsB,KAAKpB,qBACL,GACAyB,OACgBnB,IAAlBJ,GACMA,EAAcwB,OAASN,KAAKvB,MAAME,mBAQ5C,OACI,cAAC,EAAD,UACI,eAAC,EAAD,CAAkBxB,MAAM,QAAxB,UAEI,cAAC,EAAD,CACIC,GAAG,OACHC,GAAG,OACHH,eAAe,WAHnB,SAKI,cAAC,EAAD,CACI0C,KAAK,sBACLC,MAAM,QACNL,QAASP,MAKjB,eAAC,EAAD,CAAe7B,GAAG,OAAlB,UAEI,cAAC,EAAD,CAAiBT,YAAU,EAA3B,SACI,uBACI4D,KAAK,OACLX,KAAK,aACLY,YAAY,kBACZC,aAAa,MACbZ,MAAOI,EACPS,SAAUzB,MAGlB,cAAC,EAAD,CACIO,QAAS,SAAAC,GAAK,OAnCP,SAAAA,GACvB,EAAKC,SAAS,CAAEhB,aAAa,IAC7BM,EAAekB,EAAeT,GAiCIkB,CAAmBlB,IADzC,uBAQJ,cAAC,EAAD,WAAMU,GAA6BC,IAGlCD,EACG,cAAC,EAAD,CAAO/C,GAAG,MAAV,0BACAiD,EAAyB,EACzB,eAAC,EAAD,CAAOjD,GAAG,OAAV,qBACaiD,EADb,aAG6B,IAA7BD,EAAkBE,QACpBN,KAAKvB,MAAMC,YACT,cAAC,EAAD,CAAOtB,GAAG,MAAV,6BAEA,cAAC,EAAD,CAAWA,GAAG,kB,GAvHZwD,IAAMC,W,iBCWjBC,GArBM5E,IAAO6E,EAAV,qGAEC,gBAAGC,EAAH,EAAGA,WAAH,OAAqBA,GAA0B,OACrD,qBAAG5E,MAAkBC,OAAO2B,YAEnC,qBAAGiD,cAEDpE,YADY,kWCCLqE,GAPYhF,IAAOiF,GAAV,yHAGH,gBAAG/D,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAC1B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KCK1B+D,GATalF,IAAOmF,IAAV,uLAGZ,qBAAGjF,MAAkBC,OAAOiF,aCG1BC,GANKrF,IAAO6E,EAAV,0FAGJ,qBAAG3E,MAAkBC,OAAOiF,aCqD1BE,I,kBAAAA,GAhDf,SAAsBzE,GAAQ,IAAD,EACzB,QAA0CmC,KAAjC,OAALnC,QAAK,IAALA,GAAA,UAAAA,EAAO8B,YAAP,eAAa4C,sBAAoC,OAAO,KADnC,MAMrB1E,EAAM8B,KAAK4C,qBAAqB,GAFZC,EAJC,EAIrBC,mBACoBC,EALC,EAKrBC,mBALqB,EAUrB9E,EAAM8B,KAAK4C,qBAAqB,GAFtBK,EARW,EAQrBC,SACiBC,EATI,EASrBC,gBAGEC,EAAWnF,EAAM8B,KAAKkB,MAZH,EAgBiBhD,EAAMoF,mBAC5CL,GAjBqB,mBAgBlBM,EAhBkB,KAgBIC,EAhBJ,KAoBzB,OACI,eAAC,EAAD,CAAkBC,GAAG,UAAUlF,GAAG,OAAlC,UACI,qBACImF,IAAG,UAVS,mDAUT,OAAuBb,EAAvB,QACHc,IAAG,UAAKZ,EAAL,SACHa,OAAO,UAEX,eAAC,GAAD,CAAoBpF,GAAG,OAAOD,GAAG,OAAjC,UACKgF,EACD,cAAC,GAAD,UAAsBC,OAE1B,cAAC,GAAD,UAAcT,IACd,eAAC,EAAD,CAAezE,MAAM,QAAQE,GAAG,OAAOD,GAAG,OAA1C,UACI,cAAC,GAAD,oBACA,cAAC,GAAD,CAAckF,GAAG,OAAOI,cAAY,OAApC,oBAGA,cAAC,GAAD,CAAcJ,GAAG,OAAOK,SAAUX,EAAlC,SACKY,IAAWZ,EAAM,mBAG1B,cAAC,GAAD,CAAcf,cAAY,EAACD,WAAW,MAAMsB,GAAG,OAA/C,SACKJ,QCtCFW,GAZO3G,IAAOQ,IAAV,+MASD,qBAAGN,MAAkBC,OAAO8B,gBCF/B2E,GANmB5G,YAAO2G,GAAP3G,CAAH,2FCIhB6G,GALG7G,IAAO6E,EAAV,2ECMAiC,GANO9G,IAAO6E,EAAV,4FAGN,qBAAG3E,MAAkBC,OAAOiF,aCE1B2B,GALH/G,IAAOgH,IAAV,6EACY,gBAAG9F,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAC1B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KCkB1B8F,GArBkBjH,IAAOkH,QAAV,6cAMjB,qBAAGhH,MAAkBkC,YAAY+E,eAOjC,qBAAGjH,MAAkBkC,YAAYgF,uBCwD/BC,I,MAAAA,GA7Df,SAA8BxG,GAAQ,IAAD,EACjC,QAA0CmC,KAAjC,OAALnC,QAAK,IAALA,GAAA,UAAAA,EAAO8B,YAAP,eAAa4C,sBAAoC,OAAO,KAE5D,IAAM+B,EAAezG,EAAM8B,KAAK4C,qBAC3BtC,MAAM,EAAG,GACTC,KAAI,SAACqE,EAAUC,GAAW,IAEChC,EAMpB+B,EANA9B,mBACoBC,EAKpB6B,EALA5B,mBACU8B,EAIVF,EAJAG,SACUC,EAGVJ,EAHAK,SACiB9B,EAEjByB,EAFAxB,gBACA8B,EACAN,EADAM,GAMa/B,EAAH,IAAV0B,EAAoB,WACZd,IAAWZ,EAAM,aAdP,MAoBlBjF,EAAMoF,mBAAmB0B,GApBP,mBAkBlBG,EAlBkB,KAmBlB3B,EAnBkB,OAqBYtF,EAAMoF,mBACpCwB,GADGM,EArBe,oBAyBtB,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAW3B,GAAG,SAAd,SAAwBN,IACxB,cAAC,GAAD,CACIO,IAAG,UAnBX,mDAmBW,OAAuBb,EAAvB,QACHc,IAAG,UAAKZ,EAAL,SACHa,OAAO,OACPpF,GAAG,SAEP,eAAC,EAAD,CAAeF,MAAM,OAArB,UACI,eAAC,GAAD,WACK6G,EACA3B,KAEL,eAAC,GAAD,WACK4B,EACA5B,UAfmB0B,MAsB5C,OAEI,aADA,CACC,EAAD,CAAe7G,eAAe,SAASE,GAAG,OAA1C,SACI,cAAC,GAAD,UAA2BoG,OCtBxBU,GAxCgBhI,YAAOiI,EAAPjI,CAAH,4dAKV,qBAAGE,MAAkBC,OAAO2B,YAGjC,qBAAG5B,MAAkBC,OAAOC,SAmBnC,qBAAG8H,QAEDvH,YADM,wMAEY,qBAAGT,MAAkBC,OAAOC,SACjC,qBAAGF,MAAkBC,OAAOgI,kBCDlCC,I,2BAAAA,GA5Bf,SAAgCvH,GAAO,MAEgBA,EAAM8B,KAAjDI,EAF2B,EAE3BA,aAAcsF,EAFa,EAEbA,yBACtB,OACI,eAAC,EAAD,CAAerH,eAAe,WAAWE,GAAG,OAA5C,UACI,cAAC,GAAD,CACIgH,OAAqC,MAA7BG,IAAoC,EAC5C/E,QAASP,EACTW,KAAK,mBACLC,MAAM,IAJV,gBASA,cAAC,EAAD,CAAWlC,GAAG,SAEd,cAAC,GAAD,CACIyG,OAAqC,MAA7BG,IAAoC,EAC5C/E,QAASP,EACTW,KAAK,mBACLC,MAAM,IAJV,oBCPG2E,GAXatI,YAAO2G,GAAP3G,CAAH,yKACX,qBAAGuB,MAAqB,QAAU,WAM7B,gBAAGgH,EAAH,EAAGA,GAAH,OAAYA,GAAMA,KACjB,gBAAG9G,EAAH,EAAGA,GAAH,OAAYA,GAAMA,KCMvB+G,GAfQxI,IAAOQ,IAAV,0VAMP,qBAAGN,MAAkBkC,YAAY+E,eCD/BsB,GALSzI,IAAO0I,OAAV,2ECONC,GAPC3I,IAAO6E,EAAV,oIAGO,gBAAG+D,EAAH,EAAGA,YAAH,OAAsBA,GAA4B,KAC1C,gBAAGvH,EAAH,EAAGA,EAAH,OAAWA,GAAKA,KCI7BwH,GARM7I,IAAOmF,IAAV,uKCmBH2D,GAnBW9I,IAAOQ,IAAV,icAIC,qBAAGuI,aCIZC,GARUhJ,IAAOuB,MAAV,mJACT,qBAAGrB,MAAkBC,OAAOiF,aAGvB,qBAAG6D,SACO,gBAAGC,EAAH,EAAGA,EAAH,OAAWA,GAAKA,KCe7BC,GApBOnJ,IAAOoJ,MAAV,ocAMS,qBAAGlJ,MAAkBC,OAAOC,SAM5B,qBAAGF,MAAkBC,OAAOkJ,iBCCzCC,GAbJtJ,IAAOuJ,GAAV,0PAIa,gBAAGrI,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAC1B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,KAG5B,qBAAGjB,MAAkBkC,YAAY+E,eCgF/BqC,I,MAAAA,GA5Ef,SAAyB3I,GAAQ,IAAD,EAC5B,QAA0CmC,KAAjC,OAALnC,QAAK,IAALA,GAAA,UAAAA,EAAO8B,YAAP,eAAa4C,sBAAoC,OAAO,KADhC,MAUxB1E,EAAM8B,KAAK4C,qBAAqB,GANRkE,EAJA,EAIxBC,uBACgBC,EALQ,EAKxBC,eACYC,EANY,EAMxBC,WACcC,EAPU,EAOxBC,aACAC,EARwB,EAQxBA,SACAC,EATwB,EASxBA,WASJ,OANAP,EAAgBQ,KAAKC,MAAMT,GAC3BE,EAAYM,KAAKC,MAAMP,GACvBE,EAAcI,KAAKC,MAAML,GACzBE,EAAWE,KAAKC,MAAMH,GACtBC,GAAcC,KAAKC,MAAmB,GAAbF,GAAmB,IAAIG,WAAWC,QAAQ,IAAK,KAGpE,eAAC,EAAD,CAAkBnJ,GAAG,OAAOiF,GAAG,UAAUnF,MAAM,OAA/C,UACI,cAAC,GAAD,CAAIC,GAAG,OAAP,gCACA,eAAC,GAAD,WAEI,eAAC,GAAD,CAAqBkF,GAAG,UAAxB,UACI,cAAC,GAAD,0BACA,eAAC,GAAD,CAASwC,YAAY,UAArB,UACKiB,EADL,IACgB,cAAC,GAAD,uBAGhB,eAAC,EAAD,CAAe5I,MAAM,OAAOD,eAAe,eAA3C,UACI,cAAC,GAAD,CAAmB+H,UAAWY,IAC9B,cAAC,GAAD,UAAYF,UAIpB,eAAC,GAAD,CAAqBrD,GAAG,UAAxB,UACI,cAAC,GAAD,uBACA,eAAC,GAAD,CAASwC,YAAY,UAAUvH,EAAE,MAAjC,UACK4I,EADL,IACe,cAAC,GAAD,qBAGf,eAAC,EAAD,CAAkBhJ,MAAM,QAAQsF,OAAO,OAAOlF,EAAE,MAAhD,UACI,eAAC,EAAD,WACI,cAAC,GAAD,gBACA,cAAC,GAAD,CAAkB6H,EAAE,OAApB,gBACA,cAAC,GAAD,qBAEJ,cAAC,GAAD,CACIvF,MAAOsG,EACPM,IAAI,IACJC,IAAI,MACJC,IAAI,IACJC,KAAK,QAET,cAAC,GAAD,CAAkBzB,MAAM,WAAxB,qBAIR,eAAC,GAAD,CAAqB7C,GAAG,UAAU7E,OAAK,EAAvC,UACI,cAAC,GAAD,yBACA,eAAC,GAAD,WACK2I,EADL,IACiB,cAAC,GAAD,0BAIrB,eAAC,GAAD,CAAqB9D,GAAG,UAAU7E,OAAK,EAAvC,UACI,cAAC,GAAD,2BACA,eAAC,GAAD,WACKwI,EADL,IACkB,cAAC,GAAD,8BC/EhCY,GAASC,YAAH,0HA6BGC,GAnBkB7K,YAAOoB,EAAPpB,CAAH,4YAQN,qBAAGE,MAAkBC,OAAO8B,eAG/B0I,ICXNG,OATf,WACI,OACI,eAAC,GAAD,WACI,6CACA,cAAC,EAAD,iDCFGC,OANf,SAAsBC,GAClB,MAAe,SAAXA,GACW,UAAXA,GACGA,G,SCHIC,K,8EAAf,sBAAAC,EAAA,+EAEW,IAAIC,SAAQ,SAACC,EAAKC,GACrBC,UAAUC,YAAYC,mBAAmBJ,EAAKC,OAHtD,4C,oEAOA,gCAAAH,EAAA,+EAG+BD,KAH/B,OAGcQ,EAHd,OAIQC,EAAMD,EAASE,OAAOC,SACtBC,EAAOJ,EAASE,OAAOG,UAL/B,gDAOUJ,EAAc,UAATG,GAAqB,OAPpC,iCAUW,CAACH,EAAKG,IAVjB,0D,sBAaeE,I,kBAAAA,G,4CCpBT3L,GAAQ,UCUCF,GAND,CACVC,ODHW,CACX8B,aAAc,UACdkG,YAAa,UACbkB,cAAe,UACfjJ,MAAO,UACPgF,UAAW,UACXtD,SAAU,UACVpB,UAAW,UAEXsL,4BAA6B,UAC7BC,sBAAuB7L,GACvB8L,0BAA2B9L,GAC3B+L,oBAAqB,UAErBC,mBAAoB,UACpB9L,sBAAuB,WCXvB4B,OCNW,CACXC,WAAY,SDMZC,YEPgB,CAChBC,iBACI,qEACJ+E,oBAAqB,iCACrBD,YAAa,kCCAXkF,GAAcC,YAAH,6qCAOJ,qBAAGpM,MAAkBC,OAAOC,SACvB,qBAAGF,MAAkBC,OAAOgI,eAiDxCoE,GAAevM,IAAOQ,IAAV,iNAIM,qBAAGN,MAAkBC,OAAOgI,eAEvC,qBAAGjI,MAAkBkC,YAAYC,oBAgB/BmK,GATA,SAAC,GAAD,IAAG1L,EAAH,EAAGA,SAAH,OACX,cAAC,IAAD,CAAeZ,MAAOA,GAAtB,SACI,qCACI,cAACmM,GAAD,IACA,cAACE,GAAD,UAAezL,UC/DZ2L,GAZKzM,YAAOoB,EAAPpB,CAAH,+MACJ,qBAAGE,MAAkBgC,OAAOC,cACjB,qBAAGjC,MAAkBC,OAAO8B,gBAGvC,qBAAG/B,MAAkBkC,YAAYC,oBCU/BqK,GAhBI1M,IAAO2M,KAAV,gSAMU,qBAAGzM,MAAkBgC,OAAOC,cAC7B,qBAAGjC,MAAkBgC,OAAOC,cAExC,qBAAGjC,MAAkBkC,YAAYC,oBCD/BuK,GAPU5M,YAAOD,EAAPC,CAAH,kHAIJ,qBAAGE,MAAkBC,OAAOiM,sBCe/BS,GAnBQ7M,YAAOD,EAAPC,CAAH,0VAIF,qBAAGE,MAAkBC,OAAOiM,sBC2M/BU,G,kDAzLX,aAAe,IAAD,8BACV,gBAUJvK,MAAQ,CACJwK,WAAYC,wEACZC,eAAgB,GAChBC,4BAA4B,EAE5BtK,cAAe,GACfqB,2BAA2B,EAC3BkJ,WAAY,GAEZC,iBAAkB,IAClBC,qBAAqB,GArBX,EAiGdtK,aAAe,SAAAQ,GAAU,IAAD,EACIA,EAAME,OAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,MACd,EAAKH,SAAL,eAAiBE,EAAOqH,GAAapH,MAnG3B,EAwGdsC,mBAAqB,SAAAqH,GAA0B,IAAD,IAE1C,YAAsCtK,KAAlC,mDAAMT,aAAN,eAAa6K,kBACNG,MAAM,0CACavK,IAA1BsK,EACOC,MAAM,+CAEjBD,EAAwBE,WAAWF,GACC,MAAhC,EAAK/K,MAAM6K,iBACJ,CAACjD,KAAKC,MAAMkD,GAAwB,SACX,MAAhC,EAAK/K,MAAM6K,iBACJ,CAACjD,KAAKC,MAA+B,EAAxBkD,EAA6B,GAAK,GAAI,cAD9D,IAhHA,EAAKxK,eAAiB,EAAKA,eAAe2K,KAApB,gBACtB,EAAKzJ,cAAgB,EAAKA,cAAcyJ,KAAnB,gBACrB,EAAK5K,aAAe,EAAKA,aAAa4K,KAAlB,gBAEpB,EAAKC,8BAAgC,EAAKA,8BAA8BD,KAAnC,gBAErC,EAAKE,4BAA8B,EAAKA,4BAA4BF,KAAjC,gBARzB,E,4FAwBd,sBAAAvC,EAAA,sEACUpH,KAAK4J,gCADf,gD,yHAKA,WAAqBE,EAAerK,GAApC,uBAAA2H,EAAA,sEACgD0C,EAAcrK,GAD9D,sCACWsK,EADX,KACqBC,EADrB,cAIgC,MAApBD,EAASE,SAAkC,IAAhBF,EAASG,GAJhD,kCAKkCH,EAASI,OAL3C,QAKkBC,EALlB,OAMYpK,KAAKN,SAAL,eAAiBsK,EAAoBI,IANjD,iDAQmBX,MAAM,0BAAD,OACkBM,EAASE,OAD3B,YACqCF,EAASM,cATtE,0DAYQC,QAAQC,MAAR,MAZR,0D,2HAgBA,kCAAAnD,EAAA,+DACuCpH,KAAKvB,MAAhCwK,EADZ,EACYA,WAAYI,EADxB,EACwBA,WAEpBrJ,KAAKN,SAAS,CAAES,2BAA2B,IAH/C,SAI8BqK,MAAM,GAAD,OACxBvB,EADwB,yBACGI,EAAWoB,SALjD,cAIUC,EAJV,OAOI1K,KAAKN,SAAS,CAAES,2BAA2B,IAP/C,kBASW,CAACuK,EAAa,kBATzB,gD,uHAYA,WAAmBjL,GAAnB,mBAAA2H,EAAA,6DAEIpH,KAAKN,SAAS,CAAE2J,WAAY,GAAIvK,cAAe,KAEzC6L,EAAMlL,EAAME,OAAOiL,QAAQD,IAC3B1B,EAAajJ,KAAKvB,MAAMwK,WAE9BjJ,KAAKN,SAAS,CAAE0J,4BAA4B,IAPhD,SAQ8BoB,MAAM,GAAD,OAAIvB,GAAJ,OAAiB0B,EAAjB,MARnC,cAQUD,EARV,OASI1K,KAAKN,SAAS,CAAE0J,4BAA4B,IAThD,kBAWW,CAACsB,EAAa,mBAXzB,gD,yIAcA,8BAAAtD,EAAA,6DACIpH,KAAKN,SAAS,CAAE0J,4BAA4B,IADhD,SAEwBpJ,KAAK6J,8BAF7B,cAEUtK,EAFV,OAGUsL,EAAY,CAAElL,OAAQ,CAAEiL,QAAS,CAAED,IAAKpL,KAHlD,KAIUS,KAJV,SAIoCA,KAAKjB,aAJzC,+BAIuD8L,EAJvD,eAIe7L,eAJf,sE,sIASA,0CAAAoI,EAAA,6DACY6B,EAAejJ,KAAKvB,MAApBwK,WADZ,SAE8BhB,KAF9B,0CAEWL,EAFX,KAEgBG,EAFhB,KAII/H,KAAKN,SAAS,CAAES,2BAA2B,IAJ/C,UAKqCqK,MAAM,GAAD,OAC/BvB,EAD+B,4BACDrB,EADC,YACMG,IANhD,eAKU+C,EALV,OAQI9K,KAAKN,SAAS,CAAES,2BAA2B,IAR/C,UAS8B2K,EAAmBX,OATjD,eASUY,EATV,iBAUwBA,EAAY,GAAGxL,MAVvC,eAUUA,EAVV,yBAYWA,GAZX,iD,0EAsCA,WAAU,IAAD,OAECyL,EAAyB,CAC3B/K,WAAYD,KAAKvB,MAAM4K,WACvBvK,cAAekB,KAAKvB,MAAMK,cAC1BqB,0BAA2BH,KAAKvB,MAAM0B,0BACtClB,aAAce,KAAKf,aACnBD,eAAgBgB,KAAKhB,eACrBkB,cAAeF,KAAKE,cACpBnB,aAAciB,KAAKjB,cAGvB,OACI,eAAC,GAAD,WACKiB,KAAKvB,MAAM2K,4BACR,cAAC,GAAD,IAGJ,eAAC,GAAD,CAAa9G,GAAG,QAAhB,UACKtC,KAAKvB,MAAM8K,qBACR,cAAC,EAAD,CAAa1K,KAAMmM,IAGvB,eAAC,EAAD,CAAe5N,GAAG,OAAOD,MAAM,QAA/B,UACI,cAAC8N,GAAD,CACIzL,QAAS,kBACL,EAAKE,SAAS,CAAE6J,qBAAqB,KAF7C,+BAOA,cAAC,GAAD,CACI/J,QAASQ,KAAK4J,mCAItB,cAAC,GAAD,CACI/K,KAAMmB,KAAKvB,MAAM0K,eACjBhH,mBAAoBnC,KAAKmC,wBAIjC,eAAC,GAAD,WACI,cAAC,GAAD,CACItD,KAAM,CACFI,aAAce,KAAKf,aACnBsF,yBAA0BvE,KAAKvB,MAC1B6K,oBAIb,cAAC,GAAD,CACIzK,KAAMmB,KAAKvB,MAAM0K,eACjBhH,mBAAoBnC,KAAKmC,qBAG7B,cAAC,GAAD,CAAiBtD,KAAMmB,KAAKvB,MAAM0K,iBAElC,cAAC,EAAD,CAAO+B,MAAO,CAAEC,UAAW,SAAUC,UAAW,QAAhD,6C,GAjLFxK,IAAMC,WCnBxBwK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5BjQ,M","file":"static/js/main.dd2b7dee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import styled from 'styled-components'\n\nconst BUTTON_TEMPLATE = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 500;\n    border: transparent 0 solid;\n    color: ${({ theme }) => theme.colors.white};\n    background: transparent;\n`\n\nexport default BUTTON_TEMPLATE\n","import styled from 'styled-components'\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\n\nconst SearchBlueButton = styled(BUTTON_TEMPLATE)`\n    // Default button\n    height: 48px;\n    padding: 0 1.2em 0;\n    background: ${({ theme }) => theme.colors.asideBtnBackgroundAlt};\n`\n\nexport default SearchBlueButton\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst InputTextDiv = styled.div`\n    position: relative;\n    display: inline-block;\n    padding: 12px 20px;\n\n    height: 48px;\n    width: 268px;\n\n    border: ${({ theme }) => theme.colors.white} 1px solid;\n\n    font-size: 1rem;\n    // Edit inner input\n    & input {\n        background: transparent;\n        border: transparent 0 solid;\n        width: ${({ searchIcon }) => (searchIcon ? '208px' : '228px')};\n        color: ${({ theme }) => theme.colors.grayMuted};\n        font-size: 1em;\n        font-weight: 500;\n        margin-left: ${({ searchIcon }) =>\n            searchIcon ? '20px' : 0}; // make space for icon\n        :focus {\n            outline: none;\n        }\n    }\n\n    // Add search icon\n    ${({ searchIcon }) =>\n        searchIcon &&\n        css`\n            ::before {\n                position: absolute;\n                font-family: 'Material Icons', 'Raleway', sans-serif;\n                content: 'search';\n                font-size: 23px;\n                color: ${({ theme }) => theme.colors.grayMuted};\n                left: 10px;\n                top: 11px;\n            }\n        `}\n`\n\nconst FormatInputText = props => (\n    <InputTextDiv {...props}>{props.children}</InputTextDiv>\n)\n\n/// USE EXAMPLE ///\n// <FormatInputText searchIcon>\n//     <input type=\"text\" placeholder=\"search location\" />\n// </FormatInputText>\n\nexport default FormatInputText\n","import styled from 'styled-components'\n\nconst FlexRowCenter = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: ${({ justifyContent }) =>\n        justifyContent ? justifyContent : 'space-between'};\n    width: ${({ width }) => (width ? width : '100%')};\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\n`\n\nexport default FlexRowCenter\n","import styled from 'styled-components'\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    width: ${({ width }) => (width ? width : 'auto')};\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    transform: translateY(${({ y }) => y && y});\n`\n\nexport default FlexColumnCenter\n","import styled from 'styled-components'\n\nconst Small = styled.small`\n    color: ${({ theme }) => theme.colors.grayMuted};\n    font-size: 16px;\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n`\n\nexport default Small\n","import styled from 'styled-components'\n\nconst FreeSpace = styled.div`\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-right: ${({ mr }) => (mr ? mr : 0)};\n`\n\nexport default FreeSpace\n","import styled from 'styled-components'\n\nconst Ul = styled.ul`\n    list-style: none;\n    width: 100%;\n`\n\nexport default Ul\n","import styled from 'styled-components'\n\nconst CityListItem = styled.li`\n    display: flex;\n    align-items: center;\n    position: relative;\n\n    width: 100%;\n    height: 64px;\n    margin-bottom: 17px;\n    padding-left: 12px;\n\n    font-weight: 100;\n    font-size: 19px;\n    cursor: pointer;\n\n    :hover {\n        border: 1px solid ${({ theme }) => theme.colors.grayDark};\n        padding-left: 11px;\n\n        ::after {\n            position: absolute;\n            font-family: 'Material Icons', 'Raleway', sans-serif;\n            content: 'keyboard_arrow_right';\n            font-size: 28px;\n            font-weight: 400;\n            color: ${({ theme }) => theme.colors.grayMuted};\n            right: 8px;\n            top: 18px;\n        }\n    }\n`\n\nexport default CityListItem\n","import styled from 'styled-components'\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\n\nconst CloseButton = styled(BUTTON_TEMPLATE)`\n    ::before {\n        font-family: 'Material Icons', 'Raleway', sans-serif;\n        font-size: 34px;\n        font-weight: 300;\n        content: 'close';\n    }\n`\n\nexport default CloseButton\n","import FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport styled from 'styled-components'\n\nconst StyledSelectPlace = styled(FlexColumnCenter)`\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    min-height: 100vh;\n    background: ${({ theme }) => theme.colors.primaryLight};\n    width: ${({ theme }) => theme.widths.asideWidth};\n\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            width: 100vw;\n            padding-top: 5px;\n        }\n    }\n`\n\nexport default StyledSelectPlace\n","import React from 'react'\nimport SearchBlueButton from 'styled-components/buttons/SearchBlueButton'\nimport FormatInputText from 'styled-components/input/InputText'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport Small from 'styled-components/small/Small'\nimport FreeSpace from 'styled-components/position/FreeSpace'\nimport Ul from 'styled-components/ul/Ul'\nimport CityListItem from 'styled-components/li/CityListItem'\nimport CloseButton from 'styled-components/buttons/CloseButton'\nimport StyledSelectPlace from 'styled-components/StyledSelectPlace'\n\nclass SelectPlace extends React.Component {\n    state = {\n        startSearch: false,\n        numberCitiesToShow: 5,\n    }\n\n    /// GENERATE LIST OF CITIES ///\n    generatePlacesList = () => {\n        let {\n            apiCitiesData,\n            weatherQuery,\n            getDataFromApi,\n            handleChange,\n        } = this.props.data\n\n        if (typeof apiCitiesData !== 'object' || apiCitiesData[0] === undefined)\n            return [] // This empty is important!\n        // Todo format this text\n\n        // Limit cities to show\n        apiCitiesData = apiCitiesData.slice(0, this.state.numberCitiesToShow)\n\n        // On click event\n        const selectCityAction = event => {\n            getDataFromApi(weatherQuery, event)\n            this.setState({ startSearch: false })\n\n            // Modify event.target to hide SelectPlace after chose city\n            event.target = { name: 'isSelectPlaceActive', value: false }\n            handleChange(event)\n        }\n\n        // List of item to return\n        return apiCitiesData.map(city => (\n            <CityListItem\n                key={city.woeid}\n                data-key={city.woeid}\n                onClick={event => selectCityAction(event)}\n            >\n                {city.title}\n            </CityListItem>\n        ))\n    }\n\n    render() {\n        const {\n            inputValue,\n            getDataFromApi,\n            handleChange,\n            cityNameQuery,\n            isRunningApiCitiesRequest,\n            apiCitiesData,\n        } = this.props.data\n\n        const weatherRequestSent = this.state.startSearch === true\n\n        const citesListElements = weatherRequestSent\n            ? this.generatePlacesList()\n            : ''\n        const notShownCitiesElements =\n            apiCitiesData !== undefined\n                ? apiCitiesData.length - this.state.numberCitiesToShow\n                : false\n\n        const searchButtonAction = event => {\n            this.setState({ startSearch: true })\n            getDataFromApi(cityNameQuery, event)\n        }\n\n        return (\n            <StyledSelectPlace>\n                <FlexColumnCenter width='366px'>\n                    {/* CLOSE BUTTON */}\n                    <FlexRowCenter\n                        mb='13px'\n                        mt='13px'\n                        justifyContent='flex-end'\n                    >\n                        <CloseButton\n                            name='isSelectPlaceActive'\n                            value='false'\n                            onClick={handleChange}\n                        />\n                    </FlexRowCenter>\n\n                    {/* SEARCH ENGINE */}\n                    <FlexRowCenter mb='25px'>\n                        {/* todo add validation (look input isn't empty) before send */}\n                        <FormatInputText searchIcon>\n                            <input\n                                type='text'\n                                name='searchCity'\n                                placeholder='search location'\n                                autoComplete='off'\n                                value={inputValue}\n                                onChange={handleChange}\n                            />\n                        </FormatInputText>\n                        <SearchBlueButton\n                            onClick={event => searchButtonAction(event)}\n                        >\n                            Search\n                        </SearchBlueButton>\n                    </FlexRowCenter>\n\n                    {/* LIST OF CITIES */}\n                    <Ul>{!isRunningApiCitiesRequest && citesListElements}</Ul>\n\n                    {/* Reaction to all possible data state */}\n                    {isRunningApiCitiesRequest ? (\n                        <Small mb='2px'>Loading data</Small>\n                    ) : notShownCitiesElements > 0 ? (\n                        <Small mb='12px'>\n                            We hide {notShownCitiesElements} cities\n                        </Small>\n                    ) : citesListElements.length === 0 &&\n                      this.state.startSearch ? (\n                        <Small mb='2px'> Nothing found </Small>\n                    ) : (\n                        <FreeSpace mb='12px' />\n                    )}\n                </FlexColumnCenter>\n            </StyledSelectPlace>\n        )\n    }\n}\n\nexport default SelectPlace\n","import styled, { css } from 'styled-components'\n\nconst DarkGrayText = styled.p`\n    font-size: 18px;\n    font-weight: ${({ fontWeight }) => (fontWeight ? fontWeight : 500)};\n    color: ${({ theme }) => theme.colors.grayDark};\n\n    ${({ locationIcon }) =>\n        locationIcon &&\n        css`\n            ::before {\n                position: relative;\n                top: 0.14em;\n                left: -0.1em;\n                font-family: 'Material Icons', 'Raleway', sans-serif;\n                font-size: 1.2em;\n\n                font-weight: 300;\n                content: 'place';\n            }\n        `}\n`\n\nexport default DarkGrayText\n","import styled from 'styled-components'\n\nconst TodayTemperatureH1 = styled.h1`\n    font-size: 150px;\n    font-weight: 400;\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\n`\n\nexport default TodayTemperatureH1\n","import styled from 'styled-components'\n\nconst TodayTemperatureSub = styled.sub`\n    //position: relative;\n    display: inline-block;\n    color: ${({ theme }) => theme.colors.grayLight};\n    font-weight: 100;\n    font-size: 0.35em;\n    transform: translateY(-0.6em);\n`\n\nexport default TodayTemperatureSub\n","import styled from 'styled-components'\n\nconst WeatherName = styled.p`\n    font-size: 26px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.grayLight};\n`\n\nexport default WeatherName\n","import React from 'react'\nimport dateFormat from 'dateformat'\n\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport DarkGrayText from 'styled-components/p/DarkGrayText'\nimport TodayTemperatureH1 from 'styled-components/h1/TodayTemperatureH1'\nimport TodayTemperatureSub from 'styled-components/sub/TodayTemperatureSub'\nimport WeatherName from 'styled-components/p/WeatherName'\n\nfunction TodayWeather(props) {\n    if (props?.data?.consolidated_weather === undefined) return null\n\n    const {\n        weather_state_abbr: weatherImage,\n        weather_state_name: weatherName,\n    } = props.data.consolidated_weather[0]\n    let {\n        the_temp: temperature,\n        applicable_date: date,\n    } = props.data.consolidated_weather[0]\n\n    const location = props.data.title\n    const PHOTOS_LOCATION = 'https://www.metaweather.com/static/img/weather/'\n\n    // Format temperature\n    const [formattedTemperature, scaleMark] = props.convertTemperature(\n        temperature\n    )\n\n    return (\n        <FlexColumnCenter as='article' mb='24px'>\n            <img\n                src={`${PHOTOS_LOCATION}${weatherImage}.svg`}\n                alt={`${weatherName} icon`}\n                height='234px'\n            />\n            <TodayTemperatureH1 mt='36px' mb='25px'>\n                {formattedTemperature}\n                <TodayTemperatureSub>{scaleMark}</TodayTemperatureSub>\n            </TodayTemperatureH1>\n            <WeatherName>{weatherName}</WeatherName>\n            <FlexRowCenter width='160px' mt='62px' mb='40px'>\n                <DarkGrayText>Today</DarkGrayText>\n                <DarkGrayText as='span' aria-hidden='true'>\n                    •\n                </DarkGrayText>\n                <DarkGrayText as='time' datatime={date}>\n                    {dateFormat(date, 'ddd, d mmm')}\n                </DarkGrayText>\n            </FlexRowCenter>\n            <DarkGrayText locationIcon fontWeight='600' as='cite'>\n                {location}\n            </DarkGrayText>\n        </FlexColumnCenter>\n    )\n}\n\nexport default TodayWeather\n","import styled from 'styled-components'\n\nconst CARD_TEMPLATE = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    width: 100px;\n    height: 100px;\n\n    background: ${({ theme }) => theme.colors.primaryLight};\n`\n\nexport default CARD_TEMPLATE\n","import styled from 'styled-components'\nimport CARD_TEMPLATE from 'styled-components/div/CARD_TEMPLATE'\n\nconst StyledWeatherForecastCard = styled(CARD_TEMPLATE)`\n    width: 120px;\n    height: 177px;\n    padding: 18px 0;\n`\n\nexport default StyledWeatherForecastCard\n","import styled from 'styled-components'\n\nconst ThinWhite = styled.p`\n    font-size: 16px;\n    font-weight: 100;\n`\n\nexport default ThinWhite\n","import styled from 'styled-components'\n\nconst ThinLightGray = styled.p`\n    font-size: 16px;\n    font-weight: 100;\n    color: ${({ theme }) => theme.colors.grayLight};\n`\n\nexport default ThinLightGray\n","import styled from 'styled-components'\n\nconst Img = styled.img`\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\n`\n\nexport default Img\n","import styled from 'styled-components'\nconst WeatherForecastCardsGrid = styled.section`\n    display: grid;\n    grid-template-columns: repeat(5, 120px);\n    grid-template-rows: 177px;\n    grid-gap: 26px;\n\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\n        & {\n            grid-template-columns: repeat(3, 120px);\n            grid-template-rows: repeat(2, 177px);\n        }\n    }\n\n    @media ${({ theme }) => theme.breakPoints.weatherCardsTwoRows} {\n        & {\n            grid-template-columns: repeat(2, 120px);\n            grid-template-rows: repeat(3, 177px);\n        }\n    }\n`\n\nexport default WeatherForecastCardsGrid\n","import React from 'react'\nimport dateFormat from 'dateformat'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport StyledWeatherForecastCard from 'styled-components/div/StyledWeatherForecastCard'\nimport ThinWhite from 'styled-components/p/ThinWhite'\nimport ThinLightGray from 'styled-components/p/ThinLightGray'\nimport Img from 'styled-components/img/Img'\nimport WeatherForecastCardsGrid from 'styled-components/grid/WeatherForecastCardsGrid'\n\nfunction WeatherForecastCards(props) {\n    if (props?.data?.consolidated_weather === undefined) return null\n\n    const weatherCards = props.data.consolidated_weather\n        .slice(1, 6)\n        .map((cardInfo, index) => {\n            let {\n                weather_state_abbr: weatherImage,\n                weather_state_name: weatherName,\n                min_temp: minTemperature,\n                max_temp: maxTemperature,\n                applicable_date: date,\n                id,\n            } = cardInfo\n            const PHOTOS_LOCATION =\n                'https://www.metaweather.com/static/img/weather/'\n\n            // Format date\n            if (index === 0) date = 'Tomorrow'\n            else date = dateFormat(date, 'ddd d mmm')\n\n            // Format temperature\n            const [\n                formattedMaxTemperature,\n                scaleMark,\n            ] = props.convertTemperature(maxTemperature)\n            const [formattedMinTemperature] = props.convertTemperature(\n                minTemperature\n            )\n\n            return (\n                <StyledWeatherForecastCard key={id}>\n                    <ThinWhite as='header'>{date}</ThinWhite>\n                    <Img\n                        src={`${PHOTOS_LOCATION}${weatherImage}.svg`}\n                        alt={`${weatherName} icon`}\n                        height='56px'\n                        mt='-5px'\n                    />\n                    <FlexRowCenter width='70px'>\n                        <ThinWhite>\n                            {formattedMaxTemperature}\n                            {scaleMark}\n                        </ThinWhite>\n                        <ThinLightGray>\n                            {formattedMinTemperature}\n                            {scaleMark}\n                        </ThinLightGray>\n                    </FlexRowCenter>\n                </StyledWeatherForecastCard>\n            )\n        })\n\n    return (\n        // todo align like in figma\n        <FlexRowCenter justifyContent='center' mb='32px'>\n            <WeatherForecastCardsGrid>{weatherCards}</WeatherForecastCardsGrid>\n        </FlexRowCenter>\n    )\n}\n\nexport default WeatherForecastCards\n","import styled, { css } from 'styled-components'\nimport StyledButtonTemplate from 'styled-components/buttons/BUTTON_TEMPLATE'\n\nconst TemperatureScaleButton = styled(StyledButtonTemplate)`\n    position: relative;\n    height: 40px;\n    width: 40px;\n\n    background: ${({ theme }) => theme.colors.grayDark};\n    border-radius: 50%;\n\n    color: ${({ theme }) => theme.colors.white};\n    font-weight: 500;\n    font-size: 18px;\n    letter-spacing: -8px;\n\n    ::before {\n        content: '°';\n        position: absolute;\n        top: 8px;\n        left: 11px;\n\n        font-size: 25px;\n        font-weight: 500;\n    }\n\n    :focus {\n        -moz-outline-radius: 50%;\n    }\n\n    ${({ active }) =>\n        active &&\n        css`\n            background: ${({ theme }) => theme.colors.white};\n            color: ${({ theme }) => theme.colors.primaryDark};\n            font-weight: 600;\n\n            ::before {\n                font-weight: 600;\n            }\n        `}\n`\n\nexport default TemperatureScaleButton\n","import React from 'react'\nimport TemperatureScaleButton from 'styled-components/buttons/TemperatureScaleButton'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport FreeSpace from 'styled-components/position/FreeSpace'\n\nfunction SwitchTemperatureScale(props) {\n    // eslint-disable-next-line no-unused-vars\n    const { handleChange, selectedTemperatureScale } = props.data\n    return (\n        <FlexRowCenter justifyContent='flex-end' mb='25px'>\n            <TemperatureScaleButton\n                active={selectedTemperatureScale === 'c' && true}\n                onClick={handleChange}\n                name='temperatureScale'\n                value='c'\n            >\n                C {/* ° is ::before */}\n            </TemperatureScaleButton>\n\n            <FreeSpace mr='12px' />\n\n            <TemperatureScaleButton\n                active={selectedTemperatureScale === 'f' && true}\n                onClick={handleChange}\n                name='temperatureScale'\n                value='f'\n            >\n                F {/* ° is ::before */}\n            </TemperatureScaleButton>\n        </FlexRowCenter>\n    )\n}\n\nexport default SwitchTemperatureScale\n","import styled from 'styled-components'\nimport CARD_TEMPLATE from 'styled-components/div/CARD_TEMPLATE'\n\nconst StyledHighlightCard = styled(CARD_TEMPLATE)`\n    height: ${({ small }) => (small ? '160px' : '204px')};\n    width: 328px;\n\n    padding-top: 22px;\n    padding-bottom: 26px;\n\n    margin-left: ${({ ml }) => ml && ml};\n    margin-right: ${({ mr }) => mr && mr};\n`\n\nexport default StyledHighlightCard\n","import styled from 'styled-components'\n\nconst HighlightsGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 328px);\n    grid-template-rows: 204px 160px;\n    grid-gap: 48px;\n\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\n        & {\n            grid-template-columns: 328px;\n            grid-template-rows: repeat(2, 204px) repeat(2, 160px);\n            grid-gap: 30px;\n        }\n    }\n`\n\nexport default HighlightsGrid\n","import styled from 'styled-components'\n\nconst HighlightHeader = styled.header`\n    font-size: 16px;\n    font-weight: 100;\n`\n\nexport default HighlightHeader\n","import styled from 'styled-components'\n\nconst BigBold = styled.p`\n    font-size: 62px;\n    font-weight: 900;\n    word-spacing: ${({ WordSpacing }) => (WordSpacing ? WordSpacing : 0)};\n    transform: translateY(${({ y }) => y && y});\n`\n\nexport default BigBold\n","import styled from 'styled-components'\n\nconst HighlightSub = styled.sub`\n    //position: relative;\n    display: inline-block;\n    font-weight: 300;\n    font-size: 0.5em;\n    transform: translateY(-0.5em);\n`\n\nexport default HighlightSub\n","import styled from 'styled-components'\n\nconst WindDirectionIcon = styled.div`\n    position: relative;\n    background: rgba(255, 255, 255, 0.3);\n    border-radius: 50%;\n    transform: rotate(${({ rotateDeg }) => rotateDeg}deg);\n    height: 27px;\n    width: 27px;\n\n    ::after {\n        position: absolute;\n        top: calc(0.4em);\n        left: calc(0.45em);\n        font-family: 'Material Icons', 'Raleway', sans-serif;\n        font-size: 14px;\n        font-weight: 300;\n        content: 'navigation';\n    }\n`\n\nexport default WindDirectionIcon\n","import styled from 'styled-components'\n\nconst ProgressBarSmall = styled.small`\n    color: ${({ theme }) => theme.colors.grayLight};\n    font-size: 12px;\n    font-weight: 700;\n    align-self: ${({ align }) => align};\n    transform: translateX(${({ x }) => x && x});\n`\n\nexport default ProgressBarSmall\n","import styled from 'styled-components'\n\nconst HumidityMeter = styled.meter`\n    width: 100%;\n    height: 6px;\n    border-radius: 50px;\n\n    ::-webkit-meter-bar {\n        background-color: ${({ theme }) => theme.colors.white};\n        height: 6px;\n        border: 0 solid transparent;\n    }\n\n    ::-webkit-meter-optimum-value {\n        background-color: ${({ theme }) => theme.colors.complementary};\n        background-size: 100% 100%;\n        border-bottom-left-radius: 6px;\n        border-top-left-radius: 6px;\n        border: 0 solid transparent;\n    }\n`\n\nexport default HumidityMeter\n","import styled from 'styled-components'\n\nconst H2 = styled.h2`\n    font-size: 22px;\n    font-weight: 600;\n    letter-spacing: 1px;\n    margin-bottom: ${({ mb }) => (mb ? mb : 0)};\n    margin-top: ${({ mt }) => (mt ? mt : 0)};\n    transform: translateX(-250px);\n\n    @media ${({ theme }) => theme.breakPoints.smallScreen} {\n        transform: translateX(-62px);\n    }\n`\n\nexport default H2\n","import React from 'react'\nimport StyledHighlightCard from 'styled-components/div/StyledHighlightCard'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport HighlightsGrid from 'styled-components/grid/HighlightsGrid'\nimport HighlightHeader from 'styled-components/header/HighlightHeader'\nimport BigBold from 'styled-components/p/BigBold'\nimport HighlightSub from 'styled-components/sub/HighlightSub'\nimport ThinWhite from 'styled-components/p/ThinWhite'\nimport WindDirectionIcon from 'styled-components/icon/WindDirectionIcon'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\nimport ProgressBarSmall from 'styled-components/small/ProgressBarSmall'\nimport HumidityMeter from 'styled-components/meter/HumidityMeter'\nimport H2 from 'styled-components/h2/H2'\n\nfunction TodayHighlights(props) {\n    if (props?.data?.consolidated_weather === undefined) return null\n\n    let {\n        wind_direction_compass: windDirection,\n        wind_direction: compassRotate,\n        wind_speed: windSpeed,\n        air_pressure: airPressure,\n        humidity,\n        visibility,\n    } = props.data.consolidated_weather[0]\n\n    compassRotate = Math.round(compassRotate)\n    windSpeed = Math.round(windSpeed)\n    airPressure = Math.round(airPressure)\n    humidity = Math.round(humidity)\n    visibility = (Math.round(visibility * 10) / 10).toString().replace('.', ',')\n\n    return (\n        <FlexColumnCenter mt='20px' as='section' width='100%'>\n            <H2 mb='20px'>Today's Highlights</H2>\n            <HighlightsGrid>\n                {/* Todo add semantic task names */}\n                <StyledHighlightCard as='article'>\n                    <HighlightHeader>Wind status</HighlightHeader>\n                    <BigBold WordSpacing='-0.8rem'>\n                        {windSpeed} <HighlightSub> mph </HighlightSub>\n                    </BigBold>\n                    {/*Todo connect to materal icons (and replace this png image)*/}\n                    <FlexRowCenter width='80px' justifyContent='space-around'>\n                        <WindDirectionIcon rotateDeg={compassRotate} />\n                        <ThinWhite>{windDirection}</ThinWhite>\n                    </FlexRowCenter>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard as='article'>\n                    <HighlightHeader>Humidity</HighlightHeader>\n                    <BigBold WordSpacing='-0.8rem' y='7px'>\n                        {humidity} <HighlightSub> % </HighlightSub>\n                    </BigBold>\n                    {/*Todo later show this numbers like in figma*/}\n                    <FlexColumnCenter width='240px' height='27px' y='7px'>\n                        <FlexRowCenter>\n                            <ProgressBarSmall>0</ProgressBarSmall>\n                            <ProgressBarSmall x='10px'>50</ProgressBarSmall>\n                            <ProgressBarSmall>100</ProgressBarSmall>\n                        </FlexRowCenter>\n                        <HumidityMeter\n                            value={humidity}\n                            min='0'\n                            max='100'\n                            low='0'\n                            high='100'\n                        />\n                        <ProgressBarSmall align='flex-end'>%</ProgressBarSmall>\n                    </FlexColumnCenter>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard as='article' small>\n                    <HighlightHeader>Visibility</HighlightHeader>\n                    <BigBold>\n                        {visibility} <HighlightSub>miles</HighlightSub>\n                    </BigBold>\n                </StyledHighlightCard>\n\n                <StyledHighlightCard as='article' small>\n                    <HighlightHeader>Air Pressure</HighlightHeader>\n                    <BigBold>\n                        {airPressure} <HighlightSub>mb</HighlightSub>\n                    </BigBold>\n                </StyledHighlightCard>\n            </HighlightsGrid>\n        </FlexColumnCenter>\n    )\n}\n\nexport default TodayHighlights\n","import styled, { keyframes } from 'styled-components'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledLoadingWeatherData = styled(FlexColumnCenter)`\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n\n    z-index: 10;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.colors.primaryLight};\n\n    ::before {\n        animation: ${rotate} 2000ms linear infinite normal;\n        font-family: 'Material Icons', 'Raleway', sans-serif;\n        font-size: 42px;\n        font-weight: 300;\n        content: 'refresh';\n    }\n`\n\nexport default StyledLoadingWeatherData\n","import React from 'react'\nimport StyledLoadingWeatherData from 'styled-components/StyledLoadingWeatherData'\nimport Small from 'styled-components/small/Small'\n\nfunction LoadingWeatherData() {\n    return (\n        <StyledLoadingWeatherData>\n            <p>Loading data</p>\n            <Small>Please share your localization</Small>\n        </StyledLoadingWeatherData>\n    )\n}\n\nexport default LoadingWeatherData\n","function stringToBool(string) {\n    if (string === 'true') return true\n    if (string === 'false') return false\n    return string\n}\n\nexport default stringToBool\n","async function getPosition() {\n    // Simple wrapper\n    return new Promise((res, rej) => {\n        navigator.geolocation.getCurrentPosition(res, rej)\n    })\n}\n\nasync function getLatLong() {\n    let lat, long\n    try {\n        const position = await getPosition()\n        lat = position.coords.latitude\n        long = position.coords.longitude\n    } catch {\n        ;[lat, long] = [51.506321, -0.12714] // London cords\n    }\n\n    return [lat, long]\n}\n\nexport default getLatLong\n","const white = '#E7E7EB' // IF YOU WILL CHANGE WHITE IN COLORS CHANGE ALSO THIS WHITE\n\nconst colors = {\n    primaryLight: '#1E213A',\n    primaryDark: '#100E1D',\n    complementary: '#FFEC65',\n    white: '#E7E7EB',\n    grayLight: '#A09FB1',\n    grayDark: '#88869D',\n    grayMuted: '#616475',\n    // TEMPERATURE SCALE BUTTONS\n    unselectedMainBtnBackground: '#585676',\n    unselectedMainBtnText: white,\n    selectedMainBtnBackground: white,\n    selectedMainBtnText: '#110E3C',\n    // LEFT ASIDE BUTTONS\n    asideBtnBackground: '#6E707A',\n    asideBtnBackgroundAlt: '#3C47E9',\n}\n\nexport default colors\n","import colors from 'utils/colors'\nimport widths from 'utils/widths'\nimport breakPoints from 'utils/breakPoints'\n\nconst theme = {\n    colors,\n    widths,\n    breakPoints,\n}\n\nexport default theme\n","const widths = {\n    asideWidth: '460px',\n}\n\nexport default widths\n","const breakPoints = {\n    verticalRotation:\n        'screen and (max-width: 1230px), screen and  (orientation:portrait)',\n    weatherCardsTwoRows: 'screen and (max-width: 480px) ',\n    smallScreen: 'screen and (max-width: 770px)',\n}\n\nexport default breakPoints\n","import React from 'react'\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport theme from 'utils/theme'\n\nconst GlobalStyle = createGlobalStyle`\n\n  body {\n    font-weight: 600;\n    display: flex;\n    padding: 0;\n    margin: 0;\n    color: ${({ theme }) => theme.colors.white};\n    background: ${({ theme }) => theme.colors.primaryDark};\n    overflow-x: hidden; // Disable horizontal scrollbar\n    overflow: overlay; // For scroll bar // Todo Replace to more supported way\n  }\n  \n  cite {\n    font-style: normal;\n  }\n  \n  *, *::before, *::after {\n    padding: 0;\n    margin: 0;\n    font-family: 'Raleway', sans-serif;\n    box-sizing: border-box;\n  }\n  \n  :root{\n    font-size: 16px;\n  }\n\n  // SCROLLBAR\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: rgba(99, 99, 99, 0.9);\n  }\n\n  ::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.3);\n  }\n  \n  // Off animation if user turn off this on his system\n  @media (prefers-reduced-motion: reduce) {\n  *, ::before, ::after {\n    animation-delay: -1ms !important;\n    animation-duration: 1ms !important;\n    animation-iteration-count: 1 !important;\n    background-attachment: initial !important;\n    scroll-behavior: auto !important;\n    transition-duration: 0s !important;\n    transition-delay: 0s !important;\n  }\n}\n  \n`\n\nconst StyleWrapper = styled.div`\n    display: flex;\n    min-height: 100vh;\n    width: 100vw;\n    background-color: ${({ theme }) => theme.colors.primaryDark};\n\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            flex-direction: column;\n        }\n    }\n`\n\nconst Layout = ({ children }) => (\n    <ThemeProvider theme={theme}>\n        <>\n            <GlobalStyle />\n            <StyleWrapper>{children}</StyleWrapper>\n        </>\n    </ThemeProvider>\n)\n\nexport default Layout\n","import styled from 'styled-components'\nimport FlexColumnCenter from 'styled-components/position/FlexColumnCenter'\n\nconst StyledAside = styled(FlexColumnCenter)`\n    width: ${({ theme }) => theme.widths.asideWidth};\n    background-color: ${({ theme }) => theme.colors.primaryLight};\n    padding: 25px calc(100% / 25) 0 calc(100% / 25);\n\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            width: 100vw;\n        }\n    }\n`\n\nexport default StyledAside\n","import styled from 'styled-components'\n\nconst StyledMain = styled.main`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    width: calc(100vw - ${({ theme }) => theme.widths.asideWidth});\n    padding: 25px calc(${({ theme }) => theme.widths.asideWidth} / 7);\n\n    @media ${({ theme }) => theme.breakPoints.verticalRotation} {\n        & {\n            width: 100vw;\n        }\n    }\n`\n\nexport default StyledMain\n","import styled from 'styled-components'\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\n\nconst SearchGrayButton = styled(BUTTON_TEMPLATE)`\n    // Default button\n    height: 40px;\n    padding: 18px;\n    background: ${({ theme }) => theme.colors.asideBtnBackground};\n`\n\nexport default SearchGrayButton\n","import styled from 'styled-components'\nimport BUTTON_TEMPLATE from 'styled-components/buttons/BUTTON_TEMPLATE'\n\nconst LocationButton = styled(BUTTON_TEMPLATE)`\n    height: 40px;\n    width: 40px;\n\n    background: ${({ theme }) => theme.colors.asideBtnBackground};\n    border-radius: 50%;\n\n    ::before {\n        font-family: 'Material Icons', 'Raleway', sans-serif;\n        font-size: 26px;\n        font-weight: 300;\n        content: 'gps_fixed';\n    }\n\n    :focus {\n        -moz-outline-radius: 50%;\n    }\n`\n\nexport default LocationButton\n","import React from 'react'\n// COMPONENTS\nimport SelectPlace from 'components/SelectPlace'\nimport TodayWeather from 'components/TodayWeather'\nimport WeatherForecastCards from 'components/WeatherForecastCards'\nimport SwitchTemperatureScale from 'components/SwitchTemperatureScale'\nimport TodayHighlights from 'components/TodayHighlights'\nimport LoadingWeatherData from 'components/LoadingWeatherData'\n// FUNCTIONS\nimport stringToBool from 'helpers/stringToBool'\nimport getLatLong from 'helpers/getLatLong'\n// STYLED COMPONENTS\nimport Layout from 'layout/Layout'\nimport StyledAside from 'styled-components/StyledAside'\nimport StyledMain from 'styled-components/StyledMain'\nimport SearchGreyButton from 'styled-components/buttons/SearchGreyButton'\nimport LocationButton from 'styled-components/buttons/LocationButton'\nimport FlexRowCenter from 'styled-components/position/FlexRowCenter'\nimport Small from 'styled-components/small/Small'\n\nconst CORS_ANYWHERE_PREFIX = 'https://cors-anywhere.herokuapp.com/'\nconst API_ADDRESS = 'www.metaweather.com/'\nconst PREFIX = CORS_ANYWHERE_PREFIX + API_ADDRESS\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.getDataFromApi = this.getDataFromApi.bind(this)\n        this.cityNameQuery = this.cityNameQuery.bind(this)\n        this.weatherQuery = this.weatherQuery.bind(this)\n        // prettier-ignore\n        this.currentLocationQueryProcedure = this.currentLocationQueryProcedure.bind(this)\n        // prettier-ignore\n        this.getWeoidFromCurrentLocation = this.getWeoidFromCurrentLocation.bind(this)\n    }\n\n    state = {\n        apiAddress: PREFIX + 'api/location/', // WHEN USE http-proxy-middleware can delete prefix\n        apiWeatherData: [],\n        isRunningApiWeatherRequest: false,\n\n        apiCitiesData: [],\n        isRunningApiCitiesRequest: false,\n        searchCity: '',\n\n        temperatureScale: 'c',\n        isSelectPlaceActive: false,\n    }\n\n    async componentDidMount() {\n        await this.currentLocationQueryProcedure()\n    }\n\n    ///////// GET DATA FROM API /////////\n    async getDataFromApi(queryFunction, event) {\n        const [response, storeLocalization] = await queryFunction(event)\n        // Save data to state\n        try {\n            if (response.status === 200 && response.ok === true) {\n                const apiData = await response.json()\n                this.setState({ [storeLocalization]: apiData })\n            } else\n                return Error(\n                    `Failed connect to API: ${response.status} ${response.statusText}`\n                )\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    async cityNameQuery() {\n        const { apiAddress, searchCity } = this.state\n\n        this.setState({ isRunningApiCitiesRequest: true })\n        const apiResponse = await fetch(\n            `${apiAddress}search/?query=${searchCity.trim()}`\n        )\n        this.setState({ isRunningApiCitiesRequest: false })\n\n        return [apiResponse, 'apiCitiesData']\n    }\n\n    async weatherQuery(event) {\n        // Restart search engine data\n        this.setState({ searchCity: '', apiCitiesData: '' })\n\n        const key = event.target.dataset.key\n        const apiAddress = this.state.apiAddress\n\n        this.setState({ isRunningApiWeatherRequest: true })\n        const apiResponse = await fetch(`${apiAddress}${key}/`)\n        this.setState({ isRunningApiWeatherRequest: false })\n\n        return [apiResponse, 'apiWeatherData']\n    }\n\n    async currentLocationQueryProcedure() {\n        this.setState({ isRunningApiWeatherRequest: true })\n        const woeid = await this.getWeoidFromCurrentLocation()\n        const fakeEvent = { target: { dataset: { key: woeid } } }\n        await this.getDataFromApi(await this.weatherQuery, fakeEvent)\n    }\n\n    ////RELATED TO GET DATA FROM API////\n\n    async getWeoidFromCurrentLocation() {\n        const { apiAddress } = this.state\n        const [lat, long] = await getLatLong()\n\n        this.setState({ isRunningApiCitiesRequest: true })\n        const apiLatLongResponse = await fetch(\n            `${apiAddress}search/?lattlong=${lat},${long}`\n        )\n        this.setState({ isRunningApiCitiesRequest: false })\n        const nearestCity = await apiLatLongResponse.json()\n        const woeid = await nearestCity[0].woeid\n\n        return woeid\n    }\n\n    /////////////////////////////////////\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({ [name]: stringToBool(value) })\n    }\n\n    //////////// TEMPERATURE ////////////\n\n    convertTemperature = centigradeTemperature => {\n        // Output => [TemperatureInSelectedScale, SelectedScaleMark]\n        if (this?.state?.temperatureScale === undefined)\n            return Error('No data in temperatureScale stata')\n        if (centigradeTemperature === undefined)\n            return Error(\"convertTemperature don't get any parameter\")\n\n        centigradeTemperature = parseFloat(centigradeTemperature)\n        if (this.state.temperatureScale === 'c')\n            return [Math.round(centigradeTemperature), '°C']\n        if (this.state.temperatureScale === 'f')\n            return [Math.round((centigradeTemperature * 9) / 5) + 32, '°F']\n    }\n\n    render() {\n        // Todo load weather data animation\n        const selectLocalizationPack = {\n            inputValue: this.state.searchCity,\n            apiCitiesData: this.state.apiCitiesData,\n            isRunningApiCitiesRequest: this.state.isRunningApiCitiesRequest,\n            handleChange: this.handleChange,\n            getDataFromApi: this.getDataFromApi,\n            cityNameQuery: this.cityNameQuery,\n            weatherQuery: this.weatherQuery,\n        }\n\n        return (\n            <Layout>\n                {this.state.isRunningApiWeatherRequest && (\n                    <LoadingWeatherData />\n                )}\n\n                <StyledAside as='aside'>\n                    {this.state.isSelectPlaceActive && (\n                        <SelectPlace data={selectLocalizationPack} />\n                    )}\n\n                    <FlexRowCenter mb='52px' width='366px'>\n                        <SearchGreyButton\n                            onClick={() =>\n                                this.setState({ isSelectPlaceActive: true })\n                            }\n                        >\n                            Search for places\n                        </SearchGreyButton>\n                        <LocationButton\n                            onClick={this.currentLocationQueryProcedure}\n                        />\n                    </FlexRowCenter>\n\n                    <TodayWeather\n                        data={this.state.apiWeatherData}\n                        convertTemperature={this.convertTemperature}\n                    />\n                </StyledAside>\n\n                <StyledMain>\n                    <SwitchTemperatureScale\n                        data={{\n                            handleChange: this.handleChange,\n                            selectedTemperatureScale: this.state\n                                .temperatureScale,\n                        }}\n                    />\n\n                    <WeatherForecastCards\n                        data={this.state.apiWeatherData}\n                        convertTemperature={this.convertTemperature}\n                    />\n\n                    <TodayHighlights data={this.state.apiWeatherData} />\n\n                    <Small style={{ alignSelf: 'center', marginTop: '22px' }}>\n                        Created by Packman700\n                    </Small>\n                </StyledMain>\n            </Layout>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals.js'\nimport App from './App.js'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}